{"version":3,"sources":["utils/theme.js","stores/userStore.js","api/getSocket.js","stores/homeStore.js","components/sections/GlobalState.js","AppProviders.js","api/apiClient.js","api/handler/account.js","api/handler/auth.js","utils/querykeys.js","utils/toErrorMap.js","validation/auth.schema.js","components/shared/InputField.js","components/modals/ChangePasswordModal.js","utils/cropImage.js","components/modals/CropImageModal.js","pages/Account.js","pages/AuthRoute.js","pages/ForgotPassword.js","components/layouts/AppLayout.js","api/handler/messages.js","stores/channelStore.js","api/handler/dm.js","api/handler/guilds.js","components/modals/ModActionModal.js","components/modals/RemoveFriendModal.js","hooks/useGetFriend.js","components/menus/MemberContextMenu.js","utils/dateUtils.js","components/modals/DeleteMessageModal.js","components/modals/EditMessageModal.js","components/sections/UserPopover.js","hooks/useGetCurrentGuild.js","components/items/message/MessageContent.js","components/items/message/Message.js","components/sections/DateDivider.js","hooks/useGetCurrentChannel.js","hooks/useGetCurrentDM.js","components/sections/StartMessages.js","components/layouts/guild/css/GuildScrollerCSS.js","components/layouts/guild/chat/ChatGrid.js","components/layouts/guild/chat/ChatScreen.js","api/ws/useMessageSocket.js","components/sections/StyledTooltip.js","validation/message.schema.js","components/layouts/guild/chat/FileUploadButton.js","components/layouts/guild/chat/MessageInput.js","components/shared/GuildPills.js","components/items/GuildListItem.js","validation/guild.schema.js","components/modals/AddGuildModal.js","components/sections/AddGuildIcon.js","components/shared/NotificationIcon.js","components/sections/HomeIcon.js","components/layouts/guild/GuildList.js","api/ws/useGuildSocket.js","components/modals/AddFriendModal.js","components/layouts/home/dashboard/FriendsListHeader.js","components/items/FriendsListItem.js","components/sections/OnlineLabel.js","components/layouts/home/dashboard/FriendsList.js","api/ws/useFriendSocket.js","components/items/RequestListItem.js","components/layouts/home/dashboard/PendingList.js","components/layouts/home/dashboard/FriendsDashboard.js","components/layouts/home/DMHeader.js","components/items/DMListItem.js","components/sections/DMPlaceholder.js","components/sections/FriendsListButton.js","components/layouts/AccountBar.js","components/layouts/home/css/dmScrollerCSS.js","components/layouts/home/DMSidebar.js","api/ws/useDMSocket.js","pages/Home.js","pages/Invite.js","components/sections/Footer.js","components/shared/Logo.js","components/sections/Navbar.js","components/layouts/LandingLayout.js","components/sections/Hero.js","pages/Landing.js","pages/Login.js","pages/Register.js","pages/ResetPassword.js","stores/settingsStore.js","components/layouts/guild/ChannelHeader.js","api/handler/channel.js","validation/channel.schema.js","components/modals/ChannelSettingsModal.js","components/items/ChannelListItem.js","validation/member.schema.js","components/modals/EditMemberModal.js","components/layouts/guild/css/ChannelScrollerCSS.js","components/modals/GuildSettingsModal.js","components/menus/StyledMenuItem.js","components/menus/StyledMenuList.js","components/menus/GuildMenu.js","components/modals/CreateChannelModal.js","components/modals/InviteModal.js","components/layouts/guild/Channels.js","api/ws/useChannelSocket.js","components/items/MemberListItem.js","components/layouts/guild/css/MemberScrollerCSS.js","components/layouts/guild/MemberList.js","api/ws/useMemberSocket.js","pages/ViewGuild.js","App.js","index.js"],"names":["styles","global","props","body","bg","mode","customTheme","extendTheme","colors","highlight","standard","hover","active","brandGray","accent","light","dark","darker","darkest","brandGreen","labelGray","menuRed","brandBorder","accountBar","memberList","iconColor","messageInput","config","initialColorMode","fonts","scrollbarCss","width","background","borderRadius","userStore","create","persist","set","get","current","setUser","user","logout","isAuth","name","getSocket","socketIOClient","transports","upgrade","homeStore","notifCount","requestCount","increment","state","reset","resetRequest","setRequests","r","isPending","toggleDisplay","GlobalState","children","inc","useEffect","incrementNotification","window","location","pathname","includes","disconnect","socket","emit","id","on","addEventListener","client","QueryClient","defaultOptions","queries","refetchOnWindowFocus","staleTime","Infinity","cacheTime","AppProviders","theme","api","axios","baseURL","withCredentials","interceptors","response","use","error","status","localStorage","removeItem","replace","Promise","reject","updateAccount","put","headers","sendFriendRequest","post","removeFriend","delete","resetPassword","gKey","dmKey","fKey","rKey","cKey","guildId","mKey","toErrorMap","err","data","errors","errorMap","forEach","field","message","LoginSchema","yup","shape","email","required","defined","password","RegisterSchema","username","min","max","trim","lowercase","UserSchema","ResetPasswordSchema","newPassword","confirmNewPassword","oneOf","undefined","ChangePasswordSchema","currentPassword","ForgotPasswordSchema","InputField","label","useField","touched","mt","isInvalid","htmlFor","fontSize","textTransform","borderColor","focusBorderColor","ChangePasswordModal","isOpen","onClose","toast","useToast","values","a","setErrors","title","duration","isClosable","isCentered","initialValues","validationSchema","onSubmit","isSubmitting","textAlign","fontWeight","pb","autoComplete","type","onClick","mr","variant","color","_hover","_active","_focus","boxShadow","isLoading","createImage","url","resolve","image","Image","setAttribute","src","getRadianAngle","degreeValue","Math","PI","getCroppedImg","imageSrc","pixelCrop","rotation","canvas","document","createElement","ctx","getContext","maxSize","height","safeArea","sqrt","translate","rotate","drawImage","getImageData","putImageData","round","x","y","toBlob","file","CropImageModal","applyCrop","initialImage","useState","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","useCallback","croppedArea","showCroppedImage","croppedImage","console","closeOnOverlayClick","h","overflow","position","aspect","cropShape","onCropChange","onZoomChange","step","value","onChange","my","Account","useQuery","then","res","logoutUser","cache","useQueryClient","history","useHistory","useDisclosure","onOpen","cropperIsOpen","cropperOnOpen","cropperOnClose","inputFile","useRef","imageUrl","setImageUrl","cropImage","setCropImage","setCroppedImage","clear","push","formData","FormData","append","handleSelectImage","event","currentTarget","files","URL","createObjectURL","minHeight","align","justifyContent","px","maxWidth","mb","justify","p","size","cursor","opacity","click","accept","ref","hidden","placeholder","colorScheme","goBack","File","AuthRoute","Component","component","rest","storage","JSON","parse","getItem","render","to","ForgotPassword","handleSubmit","description","w","AppLayout","showLastColumn","templateColumns","templateRows","sendMessage","channelId","onUploadProgress","deleteMessage","editMessage","text","channelStore","typing","addTyping","removeTyping","filter","u","getOrCreateDirectMessage","closeDirectMessage","createGuild","joinGuild","getInviteLink","isPermanent","invalidateInviteLinks","getGuildMembers","editGuild","deleteGuild","changeGuildMemberSettings","kickMember","memberId","banMember","unbanMember","ModActionModal","member","isBan","useParams","action","invalidateQueries","toLocaleLowerCase","RemoveFriendModal","find","friend","useGetFriend","setQueryData","friends","MemberContextMenu","isOwner","modIsOpen","modOnOpen","modOnClose","setIsBan","getOrCreateDM","handleFriendClick","isFriend","className","getTime","createdAt","dayjs","calendar","formatDivider","date","format","DeleteMessageModal","alignItems","py","ml","EditMessageModal","setText","target","extend","UserPopover","isLazy","placement","boxSize","isOnline","nickname","textColor","useGetCurrentGuild","g","MessageContent","filetype","updatedAt","startsWith","fit","alt","controls","Message","isCompact","showSettings","setShowSettings","isAuthor","guild","ownerId","showMenu","isDeleteOpen","onDeleteOpen","onDeleteClose","isEditOpen","onEditOpen","onEditClose","random","toString","substr","show","useContextMenu","profileShow","onMouseLeave","onMouseEnter","minW","onContextMenu","e","newWindow","open","opener","openInNewTab","as","FiLink","MdEdit","FaRegTrashAlt","DateDivider","mx","useGetCurrentChannel","key","c","useGetCurrentDM","channel","StartMessages","DMStartMessages","ChannelStartMessages","m","guildScrollbarCss","ChatGrid","gridColumn","gridRow","display","flexDirection","overflowY","css","ChatScreen","hasMore","setHasMore","qKey","useInfiniteQuery","pageParam","length","getNextPageParam","lastPage","fetchNextPage","store","newMessage","d","pages","unshift","index","editId","i","findIndex","toBeRemoved","useMessageSocket","thickness","checkIfWithinTime","message1","message2","date1","date2","diff","messages","flatMap","InfiniteScroll","dataLength","style","inverse","loader","scrollableTarget","map","Fragment","isSame","StyledTooltip","disabled","hasArrow","isDisabled","SUPPORTED_FORMATS","FileSchema","nullable","test","FileUploadButton","setSubmitting","progress","setProgress","closeModal","validate","MdAddCircle","hasStripe","isAnimated","MessageInput","currentlyTyping","setCurrentlyTyping","inputRef","isTyping","focus","ResizeTextarea","minH","transition","resize","minRows","pl","border","onKeyDown","members","getTypingString","NotificationIndicator","left","ChannelNotificationIndicator","ActiveGuildPill","HoverGuildPill","GuildListItem","isActive","useLocation","isHover","setHover","hasNotification","default_channel_id","icon","GuildSchema","AddGuildModal","screen","setScreen","submitClose","JoinServerModal","CreateServerModal","spacing","link","guilds","AddGuildIcon","direction","NotificationIcon","count","bottom","right","transform","PingIcon","HomeIcon","notification","Logo","padding","GuildList","editedGuild","deleteId","useGuildSocket","zIndex","listStyleType","AddFriendModal","useClipboard","hasCopied","onCopy","isReadOnly","FriendsListHeader","toggle","requests","FiUsers","FriendsListItem","preventDefault","OnlineLabel","FriendsList","newFriend","sort","b","localeCompare","useFriendSocket","RequestListItem","request","acceptRequest","declineRequest","PendingList","FriendsDashboard","DMHeader","FaAt","DMListItem","dm","currentPath","showCloseButton","setShowButton","IoMdClose","DMPlaceholder","FriendsListButton","AccountBar","pos","closeOnClick","dmScrollerCss","DMSidebar","dmId","useDMSocket","Home","Invite","handleJoin","RLink","Footer","viewBox","fill","Navbar","wrap","rounded","LandingLayout","maxW","xl","Hero","subtitle","ctaLink","ctaText","base","md","lineHeight","Link","sm","Landing","Login","Register","log","ResetPassword","token","tokenError","setTokenError","settingsStore","showMembers","toggleShowMembers","ChannelHeader","toggleMemberList","BsPeopleFill","createChannel","editChannel","deleteChannel","ChannelSchema","isPublic","optional","default","ChannelSettingsModal","selectedItems","setSelectedItems","resetForm","ids","item","handleCreateItem","curr","ListItem","selected","setFieldValue","defaultChecked","checked","onCreateItem","items","itemRenderer","onSelectedItemsChange","changes","handleSelectedItemsChange","rightIcon","DeleteChannelModal","ChannelListItem","FaHashtag","FaUserLock","MdSettings","MemberSchema","matches","EditMemberModal","onChangeComplete","hex","channelScrollbarCss","GuildSettingsModal","isReset","setIsReset","handleInvalidateInvites","DeleteGuildModal","BanListModal","unbanUser","maxH","StyledMenuItem","handleClick","StyledRedMenuItem","StyledMenuList","GuildMenu","channelOpen","inviteOpen","memberOpen","memberOnOpen","memberOnClose","handleLeave","FiX","FiChevronDown","FaUserPlus","RiSettings5Fill","FaUserEdit","HiLogout","CreateChannelModal","InviteModal","inviteLink","setInviteLink","setPermanent","fetchLink","Channels","inviteIsOpen","inviteClose","channelIsOpen","channelClose","newChannel","editedChannel","useChannelSocket","MemberListItem","memberScrollbarCss","MemberList","online","offline","newMember","useMemberSocket","ViewGuild","showMemberList","App","exact","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d10d6c1d.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\r\nimport { mode } from \"@chakra-ui/theme-tools\";\r\n\r\nconst config = {\r\n  initialColorMode: \"dark\",\r\n};\r\n\r\nconst styles = {\r\n  global: (props) => ({\r\n    body: {\r\n      bg: mode(\"gray.100\", \"#1b1c1d\")(props),\r\n    },\r\n  }),\r\n};\r\n\r\nconst colors = {\r\n  highlight: {\r\n    standard: \"#7289da\",\r\n    hover: \"#677bc4\",\r\n    active: \"#5b6eae\",\r\n  },\r\n  brandGray: {\r\n    accent: \"#8e9297\",\r\n    active: \"#393c43\",\r\n    light: \"#36393f\",\r\n    dark: \"#303339\",\r\n    darker: \"#202225\",\r\n    darkest: \"#18191c\",\r\n    hover: \"#32353b\",\r\n  },\r\n  brandGreen: \"#43b581\",\r\n  labelGray: \"#72767d\",\r\n  menuRed: \"#f04747\",\r\n  brandBorder: \"#1A202C\",\r\n  accountBar: \"#292b2f\",\r\n  memberList: \"#2f3136\",\r\n  iconColor: \"#b9bbbe\",\r\n  messageInput: \"#40444b\",\r\n};\r\n\r\nconst fonts = {\r\n  body: \"'Open Sans', sans-serif\",\r\n};\r\n\r\nconst customTheme = extendTheme({ colors, config, styles, fonts });\r\n\r\nexport default customTheme;\r\n\r\nexport const scrollbarCss = {\r\n  \"&::-webkit-scrollbar\": {\r\n    width: \"8px\",\r\n  },\r\n  \"&::-webkit-scrollbar-track\": {\r\n    background: \"#2f3136\",\r\n    width: \"10px\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb\": {\r\n    background: \"brandGray.darker\",\r\n    borderRadius: \"18px\",\r\n  },\r\n};\r\n","import create from \"zustand\";\r\nimport { persist } from \"zustand/middleware\";\r\n\r\nconst userStore = create(\r\n  persist(\r\n    (set, get) => ({\r\n      current: null,\r\n      setUser: user => set({ current: user }),\r\n      logout: () => set({ current: null }),\r\n      isAuth: () => get().current !== null\r\n    }),\r\n    {\r\n      name: \"user-storage\"\r\n    }\r\n  )\r\n);\r\n\r\nexport default userStore;\r\n","import socketIOClient from \"socket.io-client\";\r\n\r\nexport default function getSocket() {\r\n  return socketIOClient(`/ws`, {\r\n    transports: [\"websocket\"],\r\n    upgrade: false\r\n  });\r\n}\r\n","import create from \"zustand\";\r\n\r\nconst homeStore = create((set) => ({\r\n  notifCount: 0,\r\n  requestCount: 0,\r\n  increment: () => set((state) => ({ notifCount: state.notifCount + 1 })),\r\n  reset: () => set(() => ({ notifCount: 0 })),\r\n  resetRequest: () => set(() => ({ requestCount: 0 })),\r\n  setRequests: (r) => set(() => ({ requestCount: r })),\r\n  isPending: false,\r\n  toggleDisplay: () => set((state) => ({ isPending: !state.isPending })),\r\n}));\r\n\r\nexport default homeStore;\r\n","import React, { useEffect } from \"react\";\r\nimport userStore from \"stores/userStore\";\r\nimport getSocket from \"api/getSocket\";\r\nimport homeStore from \"stores/homeStore\";\r\n\r\nexport default function GlobalState({ children }) {\r\n  const current = userStore((state) => state.current);\r\n  const inc = homeStore((state) => state.increment);\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      const incrementNotification = () => {\r\n        if (!window.location.pathname.includes(\"/channels/me\")) {\r\n          inc();\r\n        }\r\n      };\r\n\r\n      const disconnect = () => {\r\n        socket.emit(\"toggleOffline\");\r\n        socket.disconnect();\r\n      };\r\n\r\n      const socket = getSocket();\r\n      socket.emit(\"toggleOnline\");\r\n      socket.emit(\"joinUser\", current?.id);\r\n\r\n      socket.on(\"push_to_top\", () => {\r\n        incrementNotification();\r\n      });\r\n\r\n      socket.on(\"send_request\", () => {\r\n        incrementNotification();\r\n      });\r\n\r\n      window.addEventListener(\"beforeunload\", disconnect);\r\n\r\n      return () => disconnect();\r\n    }\r\n  }, [current, inc]);\r\n\r\n  return <>{children}</>;\r\n}\r\n","import { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport customTheme from \"utils/theme\";\r\nimport GlobalState from \"./components/sections/GlobalState\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\n\r\nconst client = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      staleTime: Infinity,\r\n      cacheTime: 0\r\n    }\r\n  }\r\n});\r\n\r\nexport default function AppProviders({ children }) {\r\n  return (\r\n    <QueryClientProvider client={client}>\r\n      <ReactQueryDevtools />\r\n      <ColorModeScript />\r\n      <ChakraProvider theme={customTheme}>\r\n        <GlobalState>\r\n          <Router>{children}</Router>\r\n        </GlobalState>\r\n      </ChakraProvider>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: \"/api\",\r\n  withCredentials: true\r\n});\r\n\r\napi.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    const { status } = error.response;\r\n    switch (status) {\r\n      case 403:\r\n        localStorage.removeItem(\"user-storage\");\r\n        window.location.replace(\"/login\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n","import { api } from \"../apiClient\";\r\n\r\nexport const getAccount = () => api.get(\"/account\");\r\n\r\nexport const updateAccount = body =>\r\n  api.put(\"/account\", body, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    }\r\n  });\r\n\r\nexport const getFriends = () => api.get(\"/account/me/friends\");\r\n\r\nexport const getPendingRequests = () => api.get(\"/account/me/pending\");\r\n\r\nexport const sendFriendRequest = id => api.post(`/account/${id}/friend`);\r\n\r\nexport const removeFriend = id => api.delete(`/account/${id}/friend`);\r\n\r\nexport const acceptFriendRequest = id =>\r\n  api.post(`/account/${id}/friend/accept`);\r\n\r\nexport const declineFriendRequest = id =>\r\n  api.post(`/account/${id}/friend/cancel`);\r\n","import { api } from \"../apiClient\";\r\n\r\nexport const register = body => api.post(\"/account/register\", body);\r\n\r\nexport const login = body => api.post(\"/account/login\", body);\r\n\r\nexport const logout = () => api.post(\"/account/logout\");\r\n\r\nexport const forgotPassword = email =>\r\n  api.post(\"/account/forgot-password\", { email });\r\n\r\nexport const changePassword = () => null;\r\n\r\nexport const resetPassword = body => api.post(\"/account/reset-password\", body);\r\n","export const gKey = \"guilds\";\r\nexport const dmKey = \"dms\";\r\nexport const aKey = \"account\";\r\nexport const fKey = \"friends\";\r\nexport const rKey = \"requests\";\r\n\r\nexport const cKey = (guildId) => `channels-${guildId}`;\r\nexport const mKey = (guildId) => `members-${guildId}`;\r\n","export default function toErrorMap(err) {\r\n  if (err?.response?.data?.errors) {\r\n    const errors = err?.response?.data?.errors;\r\n    const errorMap = {};\r\n    errors.forEach(({ field, message }) => {\r\n      errorMap[field] = message;\r\n    });\r\n    return errorMap;\r\n  }\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nexport const LoginSchema = yup.object().shape({\r\n  email: yup.string().required(\"Email is required\").defined(),\r\n  password: yup.string().required(\"Password is required\").defined(),\r\n});\r\n\r\nexport const RegisterSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .min(3)\r\n    .max(30)\r\n    .trim()\r\n    .required(\"Username is required\")\r\n    .defined(),\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .lowercase()\r\n    .required(\"Email is required\")\r\n    .defined(),\r\n  password: yup\r\n    .string()\r\n    .min(6, \"Password must be at least 6 characters long\")\r\n    .max(150)\r\n    .required(\"Password is required\")\r\n    .defined(),\r\n});\r\n\r\nexport const UserSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .lowercase()\r\n    .required(\"Email is required\")\r\n    .defined(),\r\n  username: yup\r\n    .string()\r\n    .min(3)\r\n    .max(30)\r\n    .trim()\r\n    .required(\"Username is required\")\r\n    .defined(),\r\n});\r\n\r\nexport const ResetPasswordSchema = yup.object().shape({\r\n  newPassword: yup\r\n    .string()\r\n    .min(6, \"Password must be at least 6 characters long\")\r\n    .max(150)\r\n    .required(\"New password is required\")\r\n    .defined(),\r\n  confirmNewPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"newPassword\"), undefined], \"Passwords do not match\")\r\n    .required(\"Confirm new password is required\")\r\n    .defined(),\r\n});\r\n\r\nexport const ChangePasswordSchema = yup.object().shape({\r\n  currentPassword: yup.string().required(\"Old Password is required\").defined(),\r\n  newPassword: yup\r\n    .string()\r\n    .min(6, \"Password must be at least 6 characters long\")\r\n    .max(150)\r\n    .required(\"New password is required\")\r\n    .defined(),\r\n  confirmNewPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"newPassword\"), undefined], \"Passwords do not match\")\r\n    .required(\"Confirm new password is required\")\r\n    .defined(),\r\n});\r\n\r\nexport const ForgotPasswordSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .lowercase()\r\n    .required(\"Email is required\")\r\n    .defined(),\r\n});\r\n","import {\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Input,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\nexport default function InputField({ label, ...props }) {\r\n  const [field, { error, touched }] = useField(props);\r\n  return (\r\n    <FormControl mt={4} isInvalid={error != null && touched}>\r\n      <FormLabel htmlFor={field.name}>\r\n        <Text fontSize=\"12px\" textTransform=\"uppercase\">\r\n          {label}\r\n        </Text>\r\n      </FormLabel>\r\n      {/* @ts-ignore */}\r\n      <Input\r\n        bg=\"brandGray.dark\"\r\n        borderColor=\"black\"\r\n        borderRadius=\"3px\"\r\n        focusBorderColor=\"highlight.standard\"\r\n        {...field}\r\n        {...props}\r\n      />\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { changePassword } from \"api/handler/auth\";\r\nimport React from \"react\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport { ChangePasswordSchema } from \"validation/auth.schema\";\r\nimport InputField from \"components/shared/InputField\";\r\n\r\nexport default function ChangePasswordModal({ isOpen, onClose }) {\r\n  const toast = useToast();\r\n\r\n  async function handleSubmit(values, { setErrors }) {\r\n    try {\r\n      const { data } = await changePassword(values);\r\n      if (data) {\r\n        toast({\r\n          title: \"Changed Password\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n        onClose();\r\n      }\r\n    } catch (err) {\r\n      setErrors(toErrorMap(err));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n\r\n      <ModalContent bg=\"brandGray.light\">\r\n        <Formik\r\n          initialValues={{\r\n            currentPassword: \"\",\r\n            newPassword: \"\",\r\n            confirmNewPassword: \"\",\r\n          }}\r\n          validationSchema={ChangePasswordSchema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form>\r\n              <ModalHeader textAlign=\"center\" fontWeight=\"bold\">\r\n                Change your password\r\n              </ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody pb={6}>\r\n                <Text>Enter your current password and a new password</Text>\r\n                <InputField\r\n                  label=\"current password\"\r\n                  name=\"currentPassword\"\r\n                  autoComplete=\"password\"\r\n                  type=\"password\"\r\n                />\r\n\r\n                <InputField\r\n                  label=\"new password\"\r\n                  name=\"newPassword\"\r\n                  autoComplete=\"password\"\r\n                  type=\"password\"\r\n                />\r\n\r\n                <InputField\r\n                  label=\"confirm new password\"\r\n                  name=\"confirmNewPassword\"\r\n                  autoComplete=\"password\"\r\n                  type=\"password\"\r\n                />\r\n              </ModalBody>\r\n\r\n              <ModalFooter bg=\"brandGray.dark\">\r\n                <Button\r\n                  onClick={onClose}\r\n                  fontSize={\"14px\"}\r\n                  mr={6}\r\n                  variant=\"link\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  background=\"highlight.standard\"\r\n                  color=\"white\"\r\n                  type=\"submit\"\r\n                  _hover={{ bg: \"highlight.hover\" }}\r\n                  _active={{ bg: \"highlight.active\" }}\r\n                  _focus={{ boxShadow: \"none\" }}\r\n                  isLoading={isSubmitting}\r\n                  fontSize={\"14px\"}\r\n                >\r\n                  Done\r\n                </Button>\r\n              </ModalFooter>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","const createImage = (url) =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    image.addEventListener(\"load\", () => resolve(image));\r\n    image.addEventListener(\"error\", (error) => reject(error));\r\n    image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url;\r\n  });\r\n\r\nfunction getRadianAngle(degreeValue) {\r\n  return (degreeValue * Math.PI) / 180;\r\n}\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n * @param {File} imageSrc - Image File url\r\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\r\n * @param {number} rotation - optional rotation parameter\r\n */\r\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\r\n  const image = await createImage(imageSrc);\r\n  const canvas = document.createElement(\"canvas\");\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  const maxSize = Math.max(image.width, image.height);\r\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\r\n\r\n  // set each dimensions to double largest dimension to allow for a safe area for the\r\n  // image to rotate in without being clipped by canvas context\r\n  canvas.width = safeArea;\r\n  canvas.height = safeArea;\r\n\r\n  // translate canvas context to a central location on image to allow rotating around the center.\r\n  ctx.translate(safeArea / 2, safeArea / 2);\r\n  ctx.rotate(getRadianAngle(rotation));\r\n  ctx.translate(-safeArea / 2, -safeArea / 2);\r\n\r\n  // draw rotated image and store data.\r\n  ctx.drawImage(\r\n    image,\r\n    safeArea / 2 - image.width * 0.5,\r\n    safeArea / 2 - image.height * 0.5\r\n  );\r\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\r\n\r\n  // set canvas width to final desired crop size - this will clear existing context\r\n  canvas.width = pixelCrop.width;\r\n  canvas.height = pixelCrop.height;\r\n\r\n  // paste generated rotate image with correct offsets for x,y crop values.\r\n  ctx.putImageData(\r\n    data,\r\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\r\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\r\n  );\r\n\r\n  // As Base64 string\r\n  // return canvas.toDataURL('image/jpeg');\r\n\r\n  // As a blob\r\n  return new Promise((resolve) => {\r\n    canvas.toBlob((file) => {\r\n      resolve(file);\r\n    }, \"image/jpeg\");\r\n  });\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Slider,\r\n  SliderFilledTrack,\r\n  SliderThumb,\r\n  SliderTrack,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport getCroppedImg from \"utils/cropImage\";\r\n\r\nexport default function CropImageModal({\r\n  isOpen,\r\n  onClose,\r\n  applyCrop,\r\n  initialImage,\r\n}) {\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels);\r\n  }, []);\r\n\r\n  const showCroppedImage = useCallback(async () => {\r\n    try {\r\n      const croppedImage = await getCroppedImg(initialImage, croppedAreaPixels);\r\n      applyCrop(croppedImage);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }, [croppedAreaPixels, initialImage, applyCrop]);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      isCentered\r\n      closeOnOverlayClick={false}\r\n    >\r\n      <ModalOverlay />\r\n\r\n      <ModalContent bg=\"brandGray.light\">\r\n        <ModalHeader fontWeight=\"bold\">EDIT MEDIA</ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <Box h=\"400px\" overflow=\"hidden\" position=\"relative\">\r\n            <Cropper\r\n              image={initialImage}\r\n              crop={crop}\r\n              zoom={zoom}\r\n              aspect={1}\r\n              cropShape=\"round\"\r\n              onCropChange={setCrop}\r\n              onCropComplete={onCropComplete}\r\n              onZoomChange={setZoom}\r\n            />\r\n          </Box>\r\n          <Slider\r\n            aria-label=\"zoom\"\r\n            min={1}\r\n            max={3}\r\n            step={0.01}\r\n            value={zoom}\r\n            onChange={(value) => setZoom(value)}\r\n            my=\"4\"\r\n          >\r\n            <SliderTrack>\r\n              <SliderFilledTrack />\r\n            </SliderTrack>\r\n            <SliderThumb />\r\n          </Slider>\r\n        </ModalBody>\r\n\r\n        <ModalFooter bg=\"brandGray.dark\">\r\n          <Button onClick={onClose} fontSize={\"14px\"} mr={6} variant=\"link\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            background=\"highlight.standard\"\r\n            color=\"white\"\r\n            type=\"submit\"\r\n            fontSize={\"14px\"}\r\n            _hover={{ bg: \"highlight.hover\" }}\r\n            _active={{ bg: \"highlight.active\" }}\r\n            _focus={{ boxShadow: \"none\" }}\r\n            onClick={showCroppedImage}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  Heading,\r\n  LightMode,\r\n  Spacer,\r\n  Tooltip,\r\n  useDisclosure,\r\n  useToast\r\n} from \"@chakra-ui/react\";\r\nimport { getAccount, updateAccount } from \"api/handler/account\";\r\nimport { logout } from \"api/handler/auth\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useQuery, useQueryClient } from \"react-query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\nimport { aKey } from \"utils/querykeys\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport ChangePasswordModal from \"components/modals/ChangePasswordModal\";\r\nimport CropImageModal from \"components/modals/CropImageModal\";\r\nimport InputField from \"components/shared/InputField\";\r\nimport { UserSchema } from \"validation/auth.schema\";\r\n\r\nexport default function Account() {\r\n  const { data: user } = useQuery(aKey, () =>\r\n    getAccount().then(res => res.data)\r\n  );\r\n  const logoutUser = userStore(state => state.logout);\r\n  const setUser = userStore(state => state.setUser);\r\n  const cache = useQueryClient();\r\n\r\n  const history = useHistory();\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const {\r\n    isOpen: cropperIsOpen,\r\n    onOpen: cropperOnOpen,\r\n    onClose: cropperOnClose\r\n  } = useDisclosure();\r\n\r\n  const inputFile = useRef(null);\r\n  const [imageUrl, setImageUrl] = useState(user?.image || \"\");\r\n  const [cropImage, setCropImage] = useState(\"\");\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n\r\n  async function handleLogout() {\r\n    const { data } = await logout();\r\n    if (data) {\r\n      cache.clear();\r\n      logoutUser();\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  async function handleUpdateAccount(values, { setErrors }) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"email\", values.email);\r\n      formData.append(\"username\", values.username);\r\n      formData.append(\"image\", croppedImage ?? imageUrl);\r\n      const { data } = await updateAccount(formData);\r\n      if (data) {\r\n        setUser(data);\r\n        toast({\r\n          title: \"Account updated\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setErrors(toErrorMap(err));\r\n    }\r\n  }\r\n\r\n  function handleSelectImage(event) {\r\n    if (!event.currentTarget.files) return;\r\n    setCropImage(URL.createObjectURL(event.currentTarget.files[0]));\r\n    cropperOnOpen();\r\n  }\r\n\r\n  function applyCrop(file) {\r\n    setImageUrl(URL.createObjectURL(file));\r\n    setCroppedImage(new File([file], \"avatar\"));\r\n    cropperOnClose();\r\n  }\r\n\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box px={4} width=\"full\" maxWidth=\"500px\">\r\n        <Flex mb=\"4\" justify=\"center\">\r\n          <Heading fontSize=\"24px\">MY ACCOUNT</Heading>\r\n        </Flex>\r\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\r\n          <Box>\r\n            <Formik\r\n              initialValues={{\r\n                email: user.email,\r\n                username: user.username,\r\n                image: null\r\n              }}\r\n              validationSchema={UserSchema}\r\n              onSubmit={handleUpdateAccount}\r\n            >\r\n              {({ isSubmitting, values }) => (\r\n                <Form>\r\n                  <Flex mb=\"4\" justify=\"center\">\r\n                    <Tooltip label=\"Change Avatar\" aria-label=\"Change Avatar\">\r\n                      <Avatar\r\n                        size=\"xl\"\r\n                        name={user.username}\r\n                        src={imageUrl || user.image}\r\n                        _hover={{ cursor: \"pointer\", opacity: 0.5 }}\r\n                        onClick={() => inputFile.current.click()}\r\n                      />\r\n                    </Tooltip>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"image\"\r\n                      accept=\"image/*\"\r\n                      ref={inputFile}\r\n                      hidden\r\n                      onChange={handleSelectImage}\r\n                    />\r\n                  </Flex>\r\n                  <Box my={4}>\r\n                    <InputField\r\n                      value={values.email}\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                    />\r\n\r\n                    <InputField\r\n                      value={values.username}\r\n                      placeholder=\"Username\"\r\n                      label=\"Username\"\r\n                      name=\"username\"\r\n                      autoComplete=\"username\"\r\n                    />\r\n\r\n                    <Flex my={8} align={\"end\"}>\r\n                      <Spacer />\r\n                      <Button\r\n                        mr={4}\r\n                        colorScheme=\"white\"\r\n                        variant=\"outline\"\r\n                        onClick={history.goBack}\r\n                        fontSize={\"14px\"}\r\n                      >\r\n                        Close\r\n                      </Button>\r\n\r\n                      <LightMode>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          colorScheme=\"green\"\r\n                          isLoading={isSubmitting}\r\n                          fontSize={\"14px\"}\r\n                        >\r\n                          Update\r\n                        </Button>\r\n                      </LightMode>\r\n                    </Flex>\r\n                  </Box>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Box>\r\n          <Divider my={\"4\"} />\r\n          <Flex>\r\n            <Heading fontSize=\"18px\">PASSWORD AND AUTHENTICATION</Heading>\r\n          </Flex>\r\n          <Flex mt=\"4\">\r\n            <Button\r\n              background=\"highlight.standard\"\r\n              color=\"white\"\r\n              type=\"submit\"\r\n              _hover={{ bg: \"highlight.hover\" }}\r\n              _active={{ bg: \"highlight.active\" }}\r\n              _focus={{ boxShadow: \"none\" }}\r\n              onClick={onOpen}\r\n              fontSize={\"14px\"}\r\n            >\r\n              Change Password\r\n            </Button>\r\n\r\n            <Spacer />\r\n            <Button\r\n              colorScheme=\"red\"\r\n              variant=\"outline\"\r\n              onClick={handleLogout}\r\n              fontSize={\"14px\"}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Flex>\r\n        </Box>\r\n      </Box>\r\n      {isOpen && <ChangePasswordModal isOpen={isOpen} onClose={onClose} />}\r\n      {cropperIsOpen && (\r\n        <CropImageModal\r\n          isOpen={cropperIsOpen}\r\n          onClose={cropperOnClose}\r\n          initialImage={cropImage}\r\n          applyCrop={applyCrop}\r\n        />\r\n      )}\r\n    </Flex>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\n\r\nexport default function AuthRoute({ component: Component, ...rest }) {\r\n  const current = userStore(state => state.current);\r\n  const storage = JSON.parse(localStorage.getItem(\"user-storage\"));\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        current || storage?.state?.current ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { Box, Button, Flex, Heading, Image, useToast } from \"@chakra-ui/react\";\r\nimport { forgotPassword } from \"api/handler/auth\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport InputField from \"components/shared/InputField\";\r\nimport { ForgotPasswordSchema } from \"validation/auth.schema\";\r\n\r\nexport default function ForgotPassword() {\r\n  const history = useHistory();\r\n  const toast = useToast();\r\n\r\n  const handleSubmit = async (values, { setErrors }) => {\r\n    try {\r\n      const { data } = await forgotPassword(values.email);\r\n      if (data) {\r\n        history.push(\"/\");\r\n        toast({\r\n          title: \"Reset Password\",\r\n          description:\r\n            \"If an account with that email exists, we sent you an email\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setErrors(toErrorMap(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\r\n        <Flex mb=\"4\" justify=\"center\">\r\n          <Image src=\"/logo.png\" w=\"80px\" />\r\n        </Flex>\r\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\r\n          <Box textAlign=\"center\">\r\n            <Heading fontSize=\"24px\">Forgot Password</Heading>\r\n          </Box>\r\n          <Box my={4} textAlign=\"left\">\r\n            <Formik\r\n              initialValues={{ email: \"\" }}\r\n              validationSchema={ForgotPasswordSchema}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {({ isSubmitting }) => (\r\n                <Form>\r\n                  <InputField\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    type=\"email\"\r\n                  />\r\n\r\n                  <Button\r\n                    background=\"highlight.standard\"\r\n                    color=\"white\"\r\n                    width=\"full\"\r\n                    mt={4}\r\n                    type=\"submit\"\r\n                    isLoading={isSubmitting}\r\n                    _hover={{ bg: \"highlight.hover\" }}\r\n                    _active={{ bg: \"highlight.active\" }}\r\n                    _focus={{ boxShadow: \"none\" }}\r\n                    fontSize={\"14px\"}\r\n                  >\r\n                    Send Mail\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Grid } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function AppLayout({ showLastColumn = false, children }) {\r\n  return (\r\n    <Grid\r\n      height=\"100vh\"\r\n      templateColumns={`75px 240px 1fr ${showLastColumn ? \"240px\" : \"\"} `}\r\n      templateRows=\"auto 1fr auto\"\r\n      bg=\"brandGray.light\"\r\n    >\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n","import { api } from \"../apiClient\";\r\n\r\nexport const getMessages = (id, cursor) =>\r\n  api.get(`/messages/${id}/${cursor ? `?cursor=${cursor}` : \"\"}`);\r\n\r\nexport const sendMessage = (channelId, data, onUploadProgress) =>\r\n  api.post(`/messages/${channelId}`, data, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    }\r\n  });\r\n\r\nexport const deleteMessage = id => api.delete(`/messages/${id}`);\r\n\r\nexport const editMessage = (id, text) => api.put(`/messages/${id}`, { text });\r\n","import create from \"zustand\";\r\n\r\nconst channelStore = create((set, get) => ({\r\n  typing: [],\r\n  addTyping: (username) => {\r\n    set((state) => ({ typing: [...state.typing, username] }));\r\n  },\r\n  removeTyping: (username) => {\r\n    set((state) => ({\r\n      typing: [...state.typing.filter((u) => u !== username)],\r\n    }));\r\n  },\r\n  reset: () => {\r\n    set(() => ({ typing: [] }));\r\n  },\r\n}));\r\n\r\nexport default channelStore;\r\n","import { api } from \"../apiClient\";\r\n\r\nexport const getUserDMs = () => api.get(\"/channels/me/dm\");\r\n\r\nexport const getOrCreateDirectMessage = id => api.post(`/channels/${id}/dm`);\r\n\r\nexport const closeDirectMessage = id => api.delete(`/channels/${id}/dm`);\r\n","import { api } from \"../apiClient\";\r\n\r\nexport const getUserGuilds = () => api.get(\"/guilds\");\r\n\r\nexport const createGuild = body => api.post(`/guilds/create`, body);\r\n\r\nexport const joinGuild = body => api.post(\"/guilds/join\", body);\r\n\r\nexport const getInviteLink = (id, isPermanent = false) =>\r\n  api.get(`/guilds/${id}/invite${isPermanent ? \"?isPermanent=true\" : \"\"}`);\r\n\r\nexport const invalidateInviteLinks = id => api.delete(`/guilds/${id}/invite`);\r\n\r\nexport const getGuildMembers = guildId => api.get(`/guilds/${guildId}/members`);\r\n\r\nexport const editGuild = (id, body) =>\r\n  api.put(`/guilds/${id}`, body, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    }\r\n  });\r\n\r\nexport const deleteGuild = id => api.delete(`/guilds/${id}/delete`);\r\n\r\nexport const getGuildMemberSettings = id => api.get(`/guilds/${id}/member`);\r\n\r\nexport const changeGuildMemberSettings = (id, body) =>\r\n  api.put(`/guilds/${id}/member`, body);\r\n\r\nexport const kickMember = (guildId, memberId) =>\r\n  api.post(`/guilds/${guildId}/kick`, { memberId });\r\n\r\nexport const banMember = (guildId, memberId) =>\r\n  api.post(`/guilds/${guildId}/bans`, { memberId });\r\n\r\nexport const leaveGuild = id => api.delete(`guilds/${id}`);\r\n\r\nexport const getBanList = id => api.get(`guilds/${id}/bans`);\r\n\r\nexport const unbanMember = (guildId, memberId) =>\r\n  api.delete(`guilds/${guildId}/bans`, { data: { memberId } });\r\n","import {\r\n  Button,\r\n  LightMode,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport { banMember, kickMember } from \"api/handler/guilds\";\r\nimport React from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { mKey } from \"utils/querykeys\";\r\n\r\nexport default function ModActionModal({ member, isOpen, onClose, isBan }) {\r\n  const { guildId } = useParams();\r\n  const cache = useQueryClient();\r\n  const action = isBan ? \"Ban \" : \"Kick \";\r\n\r\n  async function handleBanMember() {\r\n    onClose();\r\n    const { data } = isBan\r\n      ? await banMember(guildId, member.id)\r\n      : await kickMember(guildId, member.id);\r\n    if (data) {\r\n      cache.invalidateQueries(mKey(guildId));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n\r\n      <ModalContent bg=\"brandGray.light\">\r\n        <ModalHeader\r\n          textTransform={\"uppercase\"}\r\n          fontWeight=\"bold\"\r\n          fontSize={\"14px\"}\r\n          mb={0}\r\n          pb={0}\r\n        >\r\n          {action}'{member.username}'\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Text mb={\"4\"}>\r\n            Are you sure you want to {action.toLocaleLowerCase()} @\r\n            {member.username}?\r\n            {!isBan && \" They will be able to rejoin again with a new invite.\"}\r\n          </Text>\r\n        </ModalBody>\r\n\r\n        <ModalFooter bg=\"brandGray.dark\">\r\n          <Button onClick={onClose} mr={6} variant=\"link\" fontSize={\"14px\"}>\r\n            Cancel\r\n          </Button>\r\n          <LightMode>\r\n            <Button\r\n              colorScheme=\"red\"\r\n              fontSize={\"14px\"}\r\n              onClick={handleBanMember}\r\n            >\r\n              {action}\r\n            </Button>\r\n          </LightMode>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  LightMode,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport { removeFriend } from \"api/handler/account\";\r\nimport React from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport useGetFriend from \"hooks/useGetFriend\";\r\nimport { fKey } from \"utils/querykeys\";\r\n\r\nexport default function RemoveFriendModal({ id, isOpen, onClose }) {\r\n  const user = useGetFriend(id);\r\n  const cache = useQueryClient();\r\n\r\n  async function handleRemoveFriend() {\r\n    onClose();\r\n    const { data } = await removeFriend(id);\r\n    if (data) {\r\n      cache.setQueryData(fKey, friends => {\r\n        return friends?.filter(friend => friend.id !== id);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n\r\n      <ModalContent bg=\"brandGray.light\">\r\n        <ModalHeader\r\n          textTransform={\"uppercase\"}\r\n          fontWeight=\"bold\"\r\n          mb={0}\r\n          pb={0}\r\n        >\r\n          Remove '{user?.username}'\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Text mb={\"4\"}>\r\n            Are you sure you want to permanently remove <b>{user?.username}</b>{\" \"}\r\n            from your friends?\r\n          </Text>\r\n        </ModalBody>\r\n\r\n        <ModalFooter bg=\"brandGray.dark\">\r\n          <Button onClick={onClose} mr={6} variant=\"link\" fontSize={\"14px\"}>\r\n            Cancel\r\n          </Button>\r\n          <LightMode>\r\n            <Button\r\n              colorScheme=\"red\"\r\n              fontSize={\"14px\"}\r\n              onClick={handleRemoveFriend}\r\n            >\r\n              Remove Friend\r\n            </Button>\r\n          </LightMode>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fKey } from \"utils/querykeys\";\r\n\r\nexport default function useGetFriend(id) {\r\n  const { data } = useQuery(fKey);\r\n  return data?.find(friend => friend.id === id);\r\n}\r\n","import { Flex, Text, useDisclosure } from \"@chakra-ui/react\";\r\nimport { sendFriendRequest } from \"api/handler/account\";\r\nimport { getOrCreateDirectMessage } from \"api/handler/dm\";\r\nimport ModActionModal from \"components/modals/ModActionModal\";\r\nimport RemoveFriendModal from \"components/modals/RemoveFriendModal\";\r\nimport React, { useState } from \"react\";\r\nimport { Item, Menu, theme } from \"react-contexify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function MemberContextMenu({ member, isOwner, id }) {\r\n  const history = useHistory();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const {\r\n    isOpen: modIsOpen,\r\n    onOpen: modOnOpen,\r\n    onClose: modOnClose,\r\n  } = useDisclosure();\r\n  const [isBan, setIsBan] = useState(false);\r\n\r\n  const getOrCreateDM = async () => {\r\n    const { data } = await getOrCreateDirectMessage(member.id);\r\n    if (data) {\r\n      history.push(`/channels/me/${data.id}`);\r\n    }\r\n  };\r\n\r\n  const handleFriendClick = async () => {\r\n    if (!member.isFriend) {\r\n      await sendFriendRequest(member.id);\r\n    } else {\r\n      onOpen();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu id={id} theme={theme.dark}>\r\n        <Item onClick={getOrCreateDM} className={\"menu-item\"}>\r\n          <Flex align=\"center\" justify=\"space-between\" w=\"full\">\r\n            <Text>Message</Text>\r\n          </Flex>\r\n        </Item>\r\n        <Item onClick={handleFriendClick} className={\"menu-item\"}>\r\n          <Flex align=\"center\" justify=\"space-between\" w=\"full\">\r\n            <Text>{member.isFriend ? \"Remove\" : \"Add\"} Friend</Text>\r\n          </Flex>\r\n        </Item>\r\n        {isOwner && (\r\n          <>\r\n            <Item\r\n              onClick={() => {\r\n                setIsBan(false);\r\n                modOnOpen();\r\n              }}\r\n              className={\"delete-item\"}\r\n            >\r\n              <Flex align=\"center\" justify=\"space-between\" w=\"full\">\r\n                <Text>Kick {member.username}</Text>\r\n              </Flex>\r\n            </Item>\r\n            <Item\r\n              onClick={() => {\r\n                setIsBan(true);\r\n                modOnOpen();\r\n              }}\r\n              className={\"delete-item\"}\r\n            >\r\n              <Flex align=\"center\" justify=\"space-between\" w=\"full\">\r\n                <Text>Ban {member.username}</Text>\r\n              </Flex>\r\n            </Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n      {isOpen && <RemoveFriendModal id={member.id} isOpen onClose={onClose} />}\r\n      {modIsOpen && (\r\n        <ModActionModal\r\n          member={member}\r\n          isOpen={modIsOpen}\r\n          isBan={isBan}\r\n          onClose={modOnClose}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import dayjs from \"dayjs\";\r\nimport calendar from \"dayjs/plugin/calendar\";\r\n\r\ndayjs.extend(calendar);\r\n\r\nexport function getTime(createdAt) {\r\n  return dayjs(createdAt).calendar();\r\n}\r\n\r\nexport function getShortenedTime(createdAt) {\r\n  return dayjs(createdAt).format(\"h:mm A\");\r\n}\r\n\r\nexport function getTimeDifference(date1, date2) {\r\n  return dayjs(date1).diff(dayjs(date2), \"minutes\");\r\n}\r\n\r\nexport function checkNewDay(date1, date2) {\r\n  return !dayjs(date1).isSame(dayjs(date2), \"day\");\r\n}\r\n\r\nexport function formatDivider(date) {\r\n  return dayjs(date).format(\"MMMM D, YYYY\");\r\n}\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  LightMode,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport { deleteMessage } from \"api/handler/messages\";\r\nimport React from \"react\";\r\nimport { getTime } from \"utils/dateUtils\";\r\n\r\nexport default function DeleteMessageModal({ message, isOpen, onClose }) {\r\n  async function handleDeleteMessage() {\r\n    onClose();\r\n    await deleteMessage(message.id);\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n\r\n      <ModalContent bg=\"brandGray.light\">\r\n        <ModalHeader fontWeight=\"bold\" mb={0} pb={0}>\r\n          Delete Message\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Text mb={\"4\"}>Are you sure you want to delete this message?</Text>\r\n\r\n          <Flex\r\n            alignItems=\"center\"\r\n            my=\"2\"\r\n            mr=\"1\"\r\n            justify=\"space-between\"\r\n            boxShadow={\"dark-lg\"}\r\n            py={2}\r\n          >\r\n            <Flex>\r\n              <Avatar\r\n                h=\"40px\"\r\n                w=\"40px\"\r\n                ml=\"4\"\r\n                mt={\"1\"}\r\n                src={message.user.image}\r\n              />\r\n              <Box ml=\"3\">\r\n                <Flex alignItems=\"center\">\r\n                  <Text>{message.user.username}</Text>\r\n                  <Text fontSize=\"12px\" color=\"brandGray.accent\" ml=\"3\">\r\n                    {getTime(message.createdAt)}\r\n                  </Text>\r\n                </Flex>\r\n                <Text>{message.text}</Text>\r\n              </Box>\r\n            </Flex>\r\n          </Flex>\r\n        </ModalBody>\r\n\r\n        <ModalFooter bg=\"brandGray.dark\">\r\n          <Button onClick={onClose} mr={6} variant=\"link\" fontSize={\"14px\"}>\r\n            Cancel\r\n          </Button>\r\n          <LightMode>\r\n            <Button\r\n              colorScheme=\"red\"\r\n              fontSize={\"14px\"}\r\n              onClick={handleDeleteMessage}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </LightMode>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Input,\r\n  LightMode,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport { editMessage } from \"api/handler/messages\";\r\nimport React, { useState } from \"react\";\r\nimport { getTime } from \"utils/dateUtils\";\r\n\r\nexport default function EditMessageModal({ message, isOpen, onClose }) {\r\n  const [text, setText] = useState(message.text);\r\n  async function handleEditMessage() {\r\n    if (!text || !text.trim()) return;\r\n    await editMessage(message.id, text.trim());\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n\r\n      <ModalContent bg=\"brandGray.light\">\r\n        <ModalHeader fontWeight=\"bold\" mb={0} pb={0}>\r\n          Edit Message\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Flex\r\n            alignItems=\"center\"\r\n            my=\"2\"\r\n            mr=\"1\"\r\n            justify=\"space-between\"\r\n            boxShadow={\"dark-lg\"}\r\n            py={2}\r\n          >\r\n            <Flex alignItems=\"center\">\r\n              <Avatar h=\"40px\" w=\"40px\" ml=\"4\" src={message.user.image} />\r\n              <Box ml=\"3\">\r\n                <Flex alignItems=\"center\">\r\n                  <Text>{message.user.username}</Text>\r\n                  <Text fontSize=\"12px\" color=\"brandGray.accent\" ml=\"3\">\r\n                    {getTime(message.createdAt)}\r\n                  </Text>\r\n                </Flex>\r\n                <Input\r\n                  value={text}\r\n                  onChange={event => setText(event.target.value)}\r\n                  bg=\"brandGray.dark\"\r\n                  borderColor=\"black\"\r\n                  borderRadius=\"3px\"\r\n                  focusBorderColor=\"none\"\r\n                />\r\n              </Box>\r\n            </Flex>\r\n          </Flex>\r\n        </ModalBody>\r\n\r\n        <ModalFooter bg=\"brandGray.dark\">\r\n          <Button onClick={onClose} mr={6} variant=\"link\" fontSize={\"14px\"}>\r\n            Cancel\r\n          </Button>\r\n          <LightMode>\r\n            <Button\r\n              colorScheme=\"green\"\r\n              fontSize={\"14px\"}\r\n              onClick={handleEditMessage}\r\n            >\r\n              Save\r\n            </Button>\r\n          </LightMode>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  Avatar,\r\n  AvatarBadge,\r\n  Box,\r\n  Flex,\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverFooter,\r\n  PopoverHeader,\r\n  PopoverTrigger,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function UserPopover({ member, children }) {\r\n  return (\r\n    <Popover isLazy placement={\"right-start\"}>\r\n      <PopoverTrigger>{children}</PopoverTrigger>\r\n      <PopoverContent w={\"80%\"}>\r\n        <PopoverHeader bg={\"brandGray.darker\"} borderRadius={\"md\"}>\r\n          <Flex mt={2} align={\"center\"} justify={\"center\"}>\r\n            <Box>\r\n              <Avatar src={member.image} size={\"xl\"}>\r\n                <AvatarBadge\r\n                  boxSize=\"0.9em\"\r\n                  bg={member.isOnline ? \"green.500\" : \"gray.500\"}\r\n                />\r\n              </Avatar>\r\n              <Text\r\n                mt={2}\r\n                textAlign={\"center\"}\r\n                color={\"#fff\"}\r\n                fontWeight={\"semibold\"}\r\n              >\r\n                {member.nickname ?? member.username}\r\n              </Text>\r\n              {member.nickname && (\r\n                <Text textAlign={\"center\"}>{member.username}</Text>\r\n              )}\r\n            </Box>\r\n          </Flex>\r\n        </PopoverHeader>\r\n        <PopoverFooter bg={\"brandGray.dark\"}>\r\n          <Text\r\n            textColor={\"brandGray.accent\"}\r\n            fontSize={\"12px\"}\r\n            textAlign={\"center\"}\r\n          >\r\n            Right click user for more actions\r\n          </Text>\r\n        </PopoverFooter>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { gKey } from \"utils/querykeys\";\r\n\r\nexport default function useGetCurrentGuild(guildId) {\r\n  const { data } = useQuery(gKey);\r\n  return data?.find((g) => g.id === guildId);\r\n}\r\n","import React from \"react\";\r\nimport { Box, Flex, Image, Text } from \"@chakra-ui/react\";\r\n\r\nexport default function MessageContent({\r\n  message: { url, text, filetype, createdAt, updatedAt },\r\n}) {\r\n  if (url && filetype) {\r\n    if (filetype.startsWith(\"image/\")) {\r\n      return (\r\n        <Box boxSize=\"sm\" my={\"2\"} h={\"full\"}>\r\n          <Image fit={\"contain\"} src={url} alt={\"\"} borderRadius=\"md\" />\r\n        </Box>\r\n      );\r\n    } else if (filetype.startsWith(\"audio/\")) {\r\n      return (\r\n        <Box my={\"2\"}>\r\n          <audio controls>\r\n            <source src={url} type={filetype} />\r\n          </audio>\r\n        </Box>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <Flex alignItems={\"center\"}>\r\n      <Text>{text}</Text>\r\n      {createdAt !== updatedAt && (\r\n        <Text fontSize={\"10px\"} ml={\"1\"} color={\"labelGray\"}>\r\n          (edited)\r\n        </Text>\r\n      )}\r\n    </Flex>\r\n  );\r\n}\r\n","import { Avatar, Box, Flex, Icon, Text, useDisclosure } from \"@chakra-ui/react\";\r\nimport MemberContextMenu from \"components/menus/MemberContextMenu\";\r\nimport DeleteMessageModal from \"components/modals/DeleteMessageModal\";\r\nimport EditMessageModal from \"components/modals/EditMessageModal\";\r\nimport UserPopover from \"components/sections/UserPopover\";\r\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\r\nimport React, { useState } from \"react\";\r\nimport { Item, Menu, theme, useContextMenu } from \"react-contexify\";\r\nimport { FaEllipsisH, FaRegTrashAlt } from \"react-icons/fa\";\r\nimport { FiLink } from \"react-icons/fi\";\r\nimport { MdEdit } from \"react-icons/md\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\nimport { getShortenedTime, getTime } from \"utils/dateUtils\";\r\nimport \"../css/ContextMenu.css\";\r\nimport MessageContent from \"./MessageContent\";\r\n\r\nexport default function Message({ message, isCompact = false }) {\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const current = userStore((state) => state.current);\r\n  const isAuthor = current?.id === message.user.id;\r\n  const { guildId } = useParams();\r\n  const guild = useGetCurrentGuild(guildId);\r\n  const isOwner = guild !== undefined && guild.ownerId === current?.id;\r\n  const showMenu = isAuthor || isOwner || message.url;\r\n\r\n  const {\r\n    isOpen: isDeleteOpen,\r\n    onOpen: onDeleteOpen,\r\n    onClose: onDeleteClose,\r\n  } = useDisclosure();\r\n  const {\r\n    isOpen: isEditOpen,\r\n    onOpen: onEditOpen,\r\n    onClose: onEditClose,\r\n  } = useDisclosure();\r\n  const id = `${message.user.id}-${Math.random().toString(36).substr(2, 5)}`;\r\n\r\n  const { show } = useContextMenu({\r\n    id: message.id,\r\n  });\r\n\r\n  const { show: profileShow } = useContextMenu({ id });\r\n\r\n  const openInNewTab = (url) => {\r\n    const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\r\n    if (newWindow) newWindow.opener = null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        alignItems=\"center\"\r\n        mr=\"1\"\r\n        mt={isCompact ? \"0\" : \"3\"}\r\n        _hover={{ bg: \"brandGray.hover\" }}\r\n        justify=\"space-between\"\r\n        onMouseLeave={() => setShowSettings(false)}\r\n        onMouseEnter={() => setShowSettings(true)}\r\n      >\r\n        <Flex w={\"full\"}>\r\n          {isCompact ? (\r\n            <>\r\n              <Box ml={\"3\"} minW={\"44px\"} textAlign={\"center\"}>\r\n                <Text\r\n                  fontSize={\"10px\"}\r\n                  color=\"brandGray.accent\"\r\n                  mt={\"1\"}\r\n                  hidden={!showSettings}\r\n                >\r\n                  {getShortenedTime(message.createdAt)}\r\n                </Text>\r\n              </Box>\r\n\r\n              <Box ml=\"3\" w={\"full\"} onContextMenu={show}>\r\n                <MessageContent message={message} />\r\n              </Box>\r\n              {showSettings && showMenu ? (\r\n                <Box\r\n                  onClick={show}\r\n                  mr=\"2\"\r\n                  _hover={{ cursor: \"pointer\" }}\r\n                  h={\"5px\"}\r\n                >\r\n                  <FaEllipsisH />\r\n                </Box>\r\n              ) : (\r\n                <Box mr={\"6\"} />\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <UserPopover member={message.user}>\r\n                <Avatar\r\n                  h=\"40px\"\r\n                  w=\"40px\"\r\n                  ml=\"4\"\r\n                  mt={\"1\"}\r\n                  src={message.user.image}\r\n                  _hover={{\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onContextMenu={(e) => {\r\n                    if (!isAuthor) profileShow(e);\r\n                  }}\r\n                />\r\n              </UserPopover>\r\n              <Box ml=\"3\" w={\"full\"} onContextMenu={show}>\r\n                <Flex alignItems=\"center\" justify={\"space-between\"}>\r\n                  <Flex alignItems={\"center\"}>\r\n                    <Text color={message.user.color ?? undefined}>\r\n                      {message.user.nickname ?? message.user.username}\r\n                    </Text>\r\n                    <Text fontSize=\"12px\" color=\"brandGray.accent\" ml=\"2\">\r\n                      {getTime(message.createdAt)}\r\n                    </Text>\r\n                  </Flex>\r\n                  {showSettings && showMenu && (\r\n                    <Box onClick={show} mr=\"2\" _hover={{ cursor: \"pointer\" }}>\r\n                      <FaEllipsisH />\r\n                    </Box>\r\n                  )}\r\n                </Flex>\r\n                <MessageContent message={message} />\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n      {showMenu && (\r\n        <>\r\n          <Menu id={message.id} theme={theme.dark}>\r\n            {message.filetype ? (\r\n              <Item\r\n                className={\"menu-item\"}\r\n                onClick={() => {\r\n                  if (message.url) openInNewTab(message.url);\r\n                }}\r\n              >\r\n                <Flex align=\"center\" justify=\"space-between\" w=\"full\">\r\n                  <Text>Open Link</Text>\r\n                  <Icon as={FiLink} />\r\n                </Flex>\r\n              </Item>\r\n            ) : !isAuthor ? null : (\r\n              <Item className={\"menu-item\"} onClick={onEditOpen}>\r\n                <Flex align=\"center\" justify=\"space-between\" w=\"full\">\r\n                  <Text>Edit Message</Text>\r\n                  <Icon as={MdEdit} />\r\n                </Flex>\r\n              </Item>\r\n            )}\r\n            {(isAuthor || isOwner) && (\r\n              <Item onClick={onDeleteOpen} className={\"delete-item\"}>\r\n                <Flex align=\"center\" justify=\"space-between\" w=\"full\">\r\n                  <Text>Delete Message</Text>\r\n                  <Icon as={FaRegTrashAlt} />\r\n                </Flex>\r\n              </Item>\r\n            )}\r\n          </Menu>\r\n          {isDeleteOpen && (\r\n            <DeleteMessageModal\r\n              message={message}\r\n              isOpen={isDeleteOpen}\r\n              onClose={onDeleteClose}\r\n            />\r\n          )}\r\n          {isEditOpen && (\r\n            <EditMessageModal\r\n              message={message}\r\n              isOpen={isEditOpen}\r\n              onClose={onEditClose}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n      {!isAuthor && (\r\n        <MemberContextMenu member={message.user} isOwner={isOwner} id={id} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Divider, Flex, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { formatDivider } from \"utils/dateUtils\";\r\n\r\nexport default function DateDivider({ date }) {\r\n  return (\r\n    <Flex textAlign=\"center\" align=\"center\" mt={\"2\"} mx={\"4\"} key={date}>\r\n      <Divider />\r\n      <Text\r\n        w={[\"75%\", \"75%\", \"75%\", \"40%\", \"25%\"]}\r\n        fontSize={\"12px\"}\r\n        color={\"brandGray.accent\"}\r\n      >\r\n        {formatDivider(date)}\r\n      </Text>\r\n      <Divider />\r\n    </Flex>\r\n  );\r\n}\r\n","import { useQuery } from \"react-query\";\r\n\r\nexport default function useGetCurrentChannel(channelId, key) {\r\n  const { data } = useQuery(key);\r\n  return data?.find((c) => c.id === channelId);\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { dmKey } from \"utils/querykeys\";\r\n\r\nexport default function useGetCurrentDM(channelId) {\r\n  const { data } = useQuery(dmKey);\r\n  return data?.find(channel => channel.id === channelId);\r\n}\r\n","import { Avatar, Box, Divider, Flex, Heading, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useGetCurrentChannel from \"hooks/useGetCurrentChannel\";\r\nimport useGetCurrentDM from \"hooks/useGetCurrentDM\";\r\nimport { cKey } from \"utils/querykeys\";\r\n\r\nexport default function StartMessages() {\r\n  const { guildId } = useParams();\r\n  return guildId === undefined ? <DMStartMessages /> : <ChannelStartMessages />;\r\n}\r\n\r\nfunction ChannelStartMessages() {\r\n  const { guildId, channelId } = useParams();\r\n  const channel = useGetCurrentChannel(channelId, cKey(guildId));\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" mb=\"2\" justify=\"center\">\r\n      <Box textAlign={\"center\"}>\r\n        <Heading>Welcome to #{channel?.name}</Heading>\r\n        <Text>This is the start of the #{channel?.name} channel</Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nfunction DMStartMessages() {\r\n  const { channelId } = useParams();\r\n  const channel = useGetCurrentDM(channelId);\r\n\r\n  return (\r\n    <Box m=\"4\">\r\n      <Box h={\"40px\"} />\r\n      <Avatar h={\"80px\"} w={\"80px\"} src={channel?.user.image} />\r\n      <Heading mt={2}>{channel?.user.username}</Heading>\r\n      <Text textColor={\"brandGray.accent\"}>\r\n        This is the beginning of your direct message history with @\r\n        {channel?.user.username}\r\n      </Text>\r\n      <Divider mt={2} />\r\n    </Box>\r\n  );\r\n}\r\n","const guildScrollbarCss = {\r\n  \"&::-webkit-scrollbar\": {\r\n    width: \"0\",\r\n  },\r\n};\r\n\r\nexport default guildScrollbarCss;\r\n","import { GridItem } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { scrollbarCss } from \"utils/theme\";\r\n\r\nexport default function ChatGrid({ children }) {\r\n  return (\r\n    <GridItem\r\n      id={\"chatGrid\"}\r\n      gridColumn={3}\r\n      gridRow={\"2\"}\r\n      bg=\"brandGray.light\"\r\n      mr=\"5px\"\r\n      display=\"flex\"\r\n      flexDirection=\"column-reverse\"\r\n      overflowY=\"auto\"\r\n      css={scrollbarCss}\r\n    >\r\n      {children}\r\n    </GridItem>\r\n  );\r\n}\r\n","import { Box, Flex, Spinner } from \"@chakra-ui/react\";\r\nimport { getMessages } from \"api/handler/messages\";\r\nimport useMessageSocket from \"api/ws/useMessageSocket\";\r\nimport Message from \"components/items/message/Message\";\r\nimport DateDivider from \"components/sections/DateDivider\";\r\nimport StartMessages from \"components/sections/StartMessages\";\r\nimport React, { useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useInfiniteQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { checkNewDay, getTimeDifference } from \"utils/dateUtils\";\r\nimport guildScrollbarCss from \"../css/GuildScrollerCSS\";\r\nimport ChatGrid from \"./ChatGrid\";\r\n\r\nexport default function ChatScreen() {\r\n  const { channelId } = useParams();\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const qKey = `messages-${channelId}`;\r\n\r\n  const { data, isLoading, fetchNextPage } = useInfiniteQuery(\r\n    qKey,\r\n    async ({ pageParam = null }) => {\r\n      const { data } = await getMessages(channelId, pageParam);\r\n      if (data.length !== 35) setHasMore(false);\r\n      return data;\r\n    },\r\n    {\r\n      getNextPageParam: lastPage =>\r\n        hasMore && lastPage.length\r\n          ? lastPage[lastPage.length - 1].createdAt\r\n          : \"\"\r\n    }\r\n  );\r\n\r\n  useMessageSocket(channelId, qKey);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <ChatGrid>\r\n        <Flex align={\"center\"} justify={\"center\"} h={\"full\"}>\r\n          <Spinner size={\"xl\"} thickness={\"4px\"} />\r\n        </Flex>\r\n      </ChatGrid>\r\n    );\r\n  }\r\n\r\n  const checkIfWithinTime = (message1, message2) => {\r\n    if (message1.user.id !== message2.user.id) return false;\r\n    if (message1.createdAt === message2.createdAt) return false;\r\n    return getTimeDifference(message1.createdAt, message2.createdAt) <= 5;\r\n  };\r\n\r\n  const messages = data ? data.pages.flatMap(p => p) : [];\r\n\r\n  return (\r\n    <ChatGrid>\r\n      <Box h={\"10px\"} mt={4} />\r\n      <Box\r\n        as={InfiniteScroll}\r\n        css={guildScrollbarCss}\r\n        dataLength={messages.length}\r\n        // next={fetchNextPage}\r\n        style={{ display: \"flex\", flexDirection: \"column-reverse\" }}\r\n        inverse={true}\r\n        hasMore={hasMore}\r\n        loader={\r\n          messages.length > 0 && (\r\n            <Flex align={\"center\"} justify={\"center\"} h={\"50px\"}>\r\n              <Spinner />\r\n            </Flex>\r\n          )\r\n        }\r\n        scrollableTarget=\"chatGrid\"\r\n      >\r\n        {messages.map((m, i) => (\r\n          <React.Fragment key={m.id}>\r\n            <Message\r\n              message={m}\r\n              isCompact={checkIfWithinTime(\r\n                m,\r\n                messages[Math.min(i + 1, messages.length - 1)]\r\n              )}\r\n            />\r\n            {checkNewDay(\r\n              m.createdAt,\r\n              messages[Math.min(i + 1, messages.length - 1)].createdAt\r\n            ) && <DateDivider date={m.createdAt} />}\r\n          </React.Fragment>\r\n        ))}\r\n      </Box>\r\n      {!hasMore && <StartMessages />}\r\n    </ChatGrid>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport channelStore from \"stores/channelStore\";\r\nimport userStore from \"stores/userStore\";\r\nimport getSocket from \"../getSocket\";\r\n\r\nexport default function useMessageSocket(channelId, key) {\r\n  const current = userStore((state) => state.current);\r\n  const store = channelStore();\r\n  const cache = useQueryClient();\r\n\r\n  useEffect(() => {\r\n    store.reset();\r\n    const socket = getSocket();\r\n    socket.emit(\"joinChannel\", channelId);\r\n\r\n    socket.on(\"new_message\", (newMessage) => {\r\n      cache.setQueryData(key, (d) => {\r\n        d?.pages[0].unshift(newMessage);\r\n        return d;\r\n      });\r\n    });\r\n\r\n    socket.on(\"edit_message\", (editMessage) => {\r\n      cache.setQueryData(key, (d) => {\r\n        let index = -1;\r\n        let editId = -1;\r\n        d?.pages.forEach((p, i) => {\r\n          editId = p.findIndex((m) => m.id === editMessage.id);\r\n          if (editId !== -1) index = i;\r\n        });\r\n\r\n        if (index !== -1 && editId !== -1) {\r\n          d.pages[index][editId] = editMessage;\r\n        }\r\n        return d;\r\n      });\r\n    });\r\n\r\n    socket.on(\"delete_message\", (toBeRemoved) => {\r\n      cache.setQueryData(key, (d) => {\r\n        let index = -1;\r\n        d?.pages.forEach((p, i) => {\r\n          if (p.findIndex((m) => m.id === toBeRemoved.id) !== -1) index = i;\r\n        });\r\n        if (index !== -1) {\r\n          d.pages[index] = d?.pages[index].filter(\r\n            (m) => m.id !== toBeRemoved.id\r\n          );\r\n        }\r\n        return d;\r\n      });\r\n    });\r\n\r\n    socket.on(\"addToTyping\", (username) => {\r\n      if (username !== current?.username) {\r\n        store.addTyping(username);\r\n      }\r\n    });\r\n\r\n    socket.on(\"removeFromTyping\", (username) => {\r\n      if (username !== current?.username) {\r\n        store.removeTyping(username);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", channelId);\r\n      socket.disconnect();\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [channelId, cache, key, current]);\r\n}\r\n","import React from \"react\";\r\nimport { Tooltip } from \"@chakra-ui/react\";\r\n\r\nexport default function StyledTooltip({\r\n  label,\r\n  position,\r\n  disabled = false,\r\n  children,\r\n}) {\r\n  return (\r\n    <Tooltip\r\n      hasArrow\r\n      label={label}\r\n      placement={position}\r\n      isDisabled={disabled}\r\n      bg={\"brandGray.darkest\"}\r\n      color={\"white\"}\r\n      fontWeight={\"semibold\"}\r\n      py={1}\r\n      px={3}\r\n    >\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n","import * as yup from 'yup';\r\n\r\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'audio/mp3', 'image/png'];\r\n\r\nexport const FileSchema = yup.object().shape({\r\n  file: yup\r\n    .mixed()\r\n    .nullable()\r\n    .test('fileSize', 'The file is too large', (value) => {\r\n      return value?.size < 5000000;\r\n    })\r\n    .test('type', 'Only the following formats are accepted: Image and Audio', (value) => {\r\n      return value && SUPPORTED_FORMATS.includes(value.type);\r\n    }),\r\n});\r\n","import {\r\n  Icon,\r\n  InputLeftElement,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Progress,\r\n  Text,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { sendMessage } from \"api/handler/messages\";\r\nimport StyledTooltip from \"components/sections/StyledTooltip\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { MdAddCircle } from \"react-icons/md\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { FileSchema } from \"validation/message.schema\";\r\n\r\nexport default function FileUploadButton() {\r\n  const { channelId } = useParams();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const inputFile = useRef(null);\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const closeModal = () => {\r\n    setErrors({});\r\n    setProgress(0);\r\n    onClose();\r\n  };\r\n\r\n  const handleSubmit = async (file) => {\r\n    if (!file) return;\r\n    setSubmitting(true);\r\n\r\n    try {\r\n      await FileSchema.validate({ file });\r\n    } catch (err) {\r\n      setErrors(err.errors);\r\n      onOpen();\r\n      return;\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    await sendMessage(channelId, data, (event) => {\r\n      const loaded = Math.round((100 * event.loaded) / event.total);\r\n      setProgress(loaded);\r\n      if (loaded >= 100) setProgress(0);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <InputLeftElement\r\n      color={\"iconColor\"}\r\n      _hover={{ cursor: \"pointer\", color: \"#fcfcfc\" }}\r\n      onClick={() => inputFile.current.click()}\r\n    >\r\n      <Icon as={MdAddCircle} boxSize={\"20px\"} />\r\n      <input\r\n        type=\"file\"\r\n        ref={inputFile}\r\n        hidden\r\n        disabled={isSubmitting}\r\n        onChange={async (e) => {\r\n          if (!e.currentTarget.files) return;\r\n          handleSubmit(e.currentTarget.files[0]).then(() => {\r\n            setSubmitting(false);\r\n            e.target.value = \"\";\r\n          });\r\n        }}\r\n      />\r\n      {errors && (\r\n        <Modal size=\"sm\" isOpen={isOpen} onClose={closeModal} isCentered>\r\n          <ModalOverlay />\r\n          <ModalContent bg=\"brandGray.light\" textAlign=\"center\">\r\n            <ModalHeader pb=\"0\">Error Uploading File</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <Text mb=\"2\">Reason: {errors}</Text>\r\n              <Text>Max file size is 5.00 MB</Text>\r\n              <Text>Only Images and mp3 allowed</Text>\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n      {progress > 0 && (\r\n        <Modal\r\n          size=\"sm\"\r\n          isOpen={progress > 0}\r\n          closeOnOverlayClick={false}\r\n          onClose={closeModal}\r\n          isCentered\r\n        >\r\n          <ModalContent bg=\"brandGray.darker\" textAlign=\"center\">\r\n            <ModalHeader pb=\"0\">Upload Progress</ModalHeader>\r\n            <ModalBody>\r\n              <Progress hasStripe isAnimated value={progress} />\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </InputLeftElement>\r\n  );\r\n}\r\n","import { Flex, GridItem, InputGroup, Text, Textarea } from \"@chakra-ui/react\";\r\nimport getSocket from \"api/getSocket\";\r\nimport { sendMessage } from \"api/handler/messages\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ResizeTextarea from \"react-textarea-autosize\";\r\nimport channelStore from \"stores/channelStore\";\r\nimport userStore from \"stores/userStore\";\r\nimport { cKey, dmKey } from \"utils/querykeys\";\r\nimport \"../css/MessageInput.css\";\r\nimport FileUploadButton from \"./FileUploadButton\";\r\n\r\nexport default function MessageInput() {\r\n  const [text, setText] = useState(\"\");\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n  const [currentlyTyping, setCurrentlyTyping] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const { guildId, channelId } = useParams();\r\n  const qKey = guildId === undefined ? dmKey : cKey(guildId);\r\n  const { data } = useQuery(qKey);\r\n  const channel = data?.find(c => c.id === channelId);\r\n\r\n  const socket = getSocket();\r\n  const current = userStore(state => state.current);\r\n  const isTyping = channelStore(state => state.typing);\r\n\r\n  async function handleAddMessage(event) {\r\n    if (event.key === \"Enter\") {\r\n      if (!text || !text.trim()) return;\r\n      socket.emit(\"stopTyping\", channelId, current?.username);\r\n      setSubmitting(true);\r\n      setCurrentlyTyping(false);\r\n      const data = new FormData();\r\n      data.append(\"text\", text.trim());\r\n      await sendMessage(channelId, data);\r\n      setText(\"\");\r\n      setSubmitting(false);\r\n      inputRef?.current?.focus();\r\n    }\r\n  }\r\n\r\n  const getTypingString = members => {\r\n    switch (members.length) {\r\n      case 1:\r\n        return members[0];\r\n      case 2:\r\n        return `${members[0]} and ${members[1]}`;\r\n      case 3:\r\n        return `${members[0]}, ${members[1]} and ${members[2]}`;\r\n      default:\r\n        return \"Several people\";\r\n    }\r\n  };\r\n\r\n  function handleMessageChange(event) {\r\n    const value = event.target.value;\r\n    if (value.trim().length === 1 && !currentlyTyping) {\r\n      socket.emit(\"startTyping\", channelId, current?.username);\r\n      setCurrentlyTyping(true);\r\n    } else if (value.length === 0) {\r\n      socket.emit(\"stopTyping\", channelId, current?.username);\r\n      setCurrentlyTyping(false);\r\n    }\r\n    if (value.length <= 2000) setText(value);\r\n  }\r\n\r\n  const getPlaceholder = () => {\r\n    if (channel?.user) {\r\n      return `Message @${channel?.user.username}`;\r\n    }\r\n    return `Message #${channel?.name}`;\r\n  };\r\n\r\n  return (\r\n    <GridItem\r\n      gridColumn={3}\r\n      gridRow={3}\r\n      px=\"20px\"\r\n      pb={isTyping.length > 0 ? \"0\" : \"26px\"}\r\n      bg=\"brandGray.light\"\r\n    >\r\n      <InputGroup\r\n        size=\"md\"\r\n        bg=\"messageInput\"\r\n        alignItems=\"center\"\r\n        borderRadius=\"8px\"\r\n      >\r\n        <Textarea\r\n          as={ResizeTextarea}\r\n          minH=\"40px\"\r\n          transition=\"height none\"\r\n          overflow=\"hidden\"\r\n          w=\"100%\"\r\n          resize=\"none\"\r\n          minRows={1}\r\n          pl=\"3rem\"\r\n          name={\"text\"}\r\n          placeholder={getPlaceholder()}\r\n          border=\"0\"\r\n          _focus={{ border: \"0\" }}\r\n          ref={inputRef}\r\n          isDisabled={isSubmitting}\r\n          value={text}\r\n          onChange={handleMessageChange}\r\n          onKeyDown={handleAddMessage}\r\n        />\r\n        <FileUploadButton />\r\n      </InputGroup>\r\n      {isTyping.length > 0 && (\r\n        <Flex align={\"center\"} fontSize={\"12px\"} my={1}>\r\n          <div className=\"typing-indicator\">\r\n            <span />\r\n            <span />\r\n            <span />\r\n          </div>\r\n          <Text ml={\"1\"} fontWeight={\"semibold\"}>\r\n            {getTypingString(isTyping)}\r\n          </Text>\r\n          <Text ml={\"1\"}>\r\n            {isTyping.length === 1 ? \"is\" : \"are\"} typing...{\" \"}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n    </GridItem>\r\n  );\r\n}\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport function NotificationIndicator() {\r\n  return (\r\n    <Box\r\n      w={\"8px\"}\r\n      h={\"8px\"}\r\n      bg={\"white\"}\r\n      position={\"absolute\"}\r\n      borderRadius={\"0 4px 4px 0\"}\r\n      ml={\"-4px\"}\r\n      mt={\"20px\"}\r\n      left={0}\r\n    />\r\n  );\r\n}\r\n\r\nexport function ChannelNotificationIndicator() {\r\n  return (\r\n    <Box\r\n      w={\"8px\"}\r\n      h={\"8px\"}\r\n      bg={\"white\"}\r\n      position={\"absolute\"}\r\n      borderRadius={\"0 4px 4px 0\"}\r\n      ml={\"-4px\"}\r\n      mt={\"8px\"}\r\n      left={\"75px\"}\r\n    />\r\n  );\r\n}\r\n\r\nexport function ActiveGuildPill() {\r\n  return (\r\n    <Box\r\n      w={\"8px\"}\r\n      h={\"40px\"}\r\n      bg={\"white\"}\r\n      position={\"absolute\"}\r\n      borderRadius={\"0 4px 4px 0\"}\r\n      ml={\"-4px\"}\r\n      left={0}\r\n      mt={\"4px\"}\r\n    />\r\n  );\r\n}\r\n\r\nexport function HoverGuildPill() {\r\n  return (\r\n    <Box\r\n      w={\"8px\"}\r\n      h={\"24px\"}\r\n      bg={\"white\"}\r\n      position={\"absolute\"}\r\n      borderRadius={\"0 4px 4px 0\"}\r\n      ml={\"-4px\"}\r\n      left={0}\r\n      mt={\"12px\"}\r\n    />\r\n  );\r\n}\r\n","import { Avatar, Flex } from \"@chakra-ui/react\";\r\nimport StyledTooltip from \"components/sections/StyledTooltip\";\r\nimport {\r\n  ActiveGuildPill,\r\n  HoverGuildPill,\r\n  NotificationIndicator,\r\n} from \"components/shared/GuildPills\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { gKey } from \"utils/querykeys\";\r\n\r\nexport default function GuildListItem({ guild }) {\r\n  const location = useLocation();\r\n  const isActive = location.pathname.includes(guild.id);\r\n  const [isHover, setHover] = useState(false);\r\n  const cache = useQueryClient();\r\n\r\n  useEffect(() => {\r\n    if (guild.hasNotification && isActive) {\r\n      cache.setQueryData(gKey, (d) => {\r\n        const index = d?.findIndex((c) => c.id === guild.id);\r\n        if (index !== -1) {\r\n          d[index] = { ...d[index], hasNotification: false };\r\n        }\r\n        return d;\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Flex mb={\"2\"} justify={\"center\"}>\r\n      {isActive && <ActiveGuildPill />}\r\n      {isHover && <HoverGuildPill />}\r\n      {guild.hasNotification && <NotificationIndicator />}\r\n      <StyledTooltip label={guild.name} position={\"right\"}>\r\n        <Link to={`/channels/${guild.id}/${guild.default_channel_id}`}>\r\n          {guild.icon ? (\r\n            <Avatar\r\n              src={guild.icon}\r\n              borderRadius={isActive ? \"35%\" : \"50%\"}\r\n              _hover={{ borderRadius: \"35%\" }}\r\n              name={guild.name}\r\n              color={\"#fff\"}\r\n              bg={\"brandGray.light\"}\r\n              onMouseLeave={() => setHover(false)}\r\n              onMouseEnter={() => setHover(true)}\r\n            />\r\n          ) : (\r\n            <Flex\r\n              justify={\"center\"}\r\n              align={\"center\"}\r\n              bg={isActive ? \"highlight.standard\" : \"brandGray.light\"}\r\n              borderRadius={isActive ? \"35%\" : \"50%\"}\r\n              h={\"48px\"}\r\n              w={\"48px\"}\r\n              color={isActive ? \"white\" : undefined}\r\n              fontSize=\"20px\"\r\n              _hover={{\r\n                borderRadius: \"35%\",\r\n                bg: \"highlight.standard\",\r\n                color: \"white\",\r\n              }}\r\n              onMouseLeave={() => setHover(false)}\r\n              onMouseEnter={() => setHover(true)}\r\n            >\r\n              {guild.name[0]}\r\n            </Flex>\r\n          )}\r\n        </Link>\r\n      </StyledTooltip>\r\n    </Flex>\r\n  );\r\n}\r\n","import * as yup from 'yup';\r\n\r\nexport const GuildSchema = yup.object().shape({\r\n  name: yup.string().min(3).max(30).required(),\r\n});","import {\r\n  Button,\r\n  Divider,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  VStack\r\n} from \"@chakra-ui/react\";\r\nimport { createGuild, joinGuild } from \"api/handler/guilds\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\nimport { gKey } from \"utils/querykeys\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport { GuildSchema } from \"validation/guild.schema\";\r\nimport InputField from \"components/shared/InputField\";\r\n\r\nexport default function AddGuildModal({ isOpen, onClose }) {\r\n  const [screen, setScreen] = useState(\"START\");\r\n\r\n  const goBack = () => setScreen(\"START\");\r\n  const submitClose = () => {\r\n    setScreen(\"START\");\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={submitClose} isCentered size=\"sm\">\r\n      <ModalOverlay />\r\n      {screen === \"INVITE\" && (\r\n        <JoinServerModal goBack={goBack} submitClose={submitClose} />\r\n      )}\r\n      {screen === \"CREATE\" && (\r\n        <CreateServerModal goBack={goBack} submitClose={submitClose} />\r\n      )}\r\n      {screen === \"START\" && (\r\n        <ModalContent bg=\"brandGray.light\">\r\n          <ModalHeader textAlign=\"center\" fontWeight=\"bold\">\r\n            Create a server\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody pb={6}>\r\n            <VStack spacing=\"5\">\r\n              <Text textAlign=\"center\">\r\n                Your server is where you and your friends hang out. Make yours\r\n                and start talking.\r\n              </Text>\r\n\r\n              <Button\r\n                background=\"highlight.standard\"\r\n                color=\"white\"\r\n                type=\"submit\"\r\n                _hover={{ bg: \"highlight.hover\" }}\r\n                _active={{ bg: \"highlight.active\" }}\r\n                _focus={{ boxShadow: \"none\" }}\r\n                w=\"full\"\r\n                onClick={() => setScreen(\"CREATE\")}\r\n              >\r\n                Create My Own\r\n              </Button>\r\n\r\n              <Divider />\r\n\r\n              <Text>Have an invite already?</Text>\r\n\r\n              <Button\r\n                mt=\"4\"\r\n                background=\"highlight.standard\"\r\n                color=\"white\"\r\n                type=\"submit\"\r\n                _hover={{ bg: \"highlight.hover\" }}\r\n                _active={{ bg: \"highlight.active\" }}\r\n                _focus={{ boxShadow: \"none\" }}\r\n                w=\"full\"\r\n                onClick={() => setScreen(\"INVITE\")}\r\n              >\r\n                Join a Server\r\n              </Button>\r\n            </VStack>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction JoinServerModal({ goBack, submitClose }) {\r\n  const cache = useQueryClient();\r\n  const history = useHistory();\r\n  async function handleJoinServer(values, { setErrors }) {\r\n    if (values.link === \"\") {\r\n      setErrors({ link: \"Enter a valid link\" });\r\n    } else {\r\n      try {\r\n        const { data } = await joinGuild(values);\r\n        if (data) {\r\n          cache.invalidateQueries(gKey);\r\n          submitClose();\r\n          history.push(`/channels/${data.id}/${data.default_channel_id}`);\r\n        }\r\n      } catch (err) {\r\n        const status = err?.response?.status;\r\n        if (status === 400 || status === 404) {\r\n          setErrors({ link: err?.response?.data?.message });\r\n        } else {\r\n          setErrors(toErrorMap(err));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ModalContent bg=\"brandGray.light\">\r\n      <Formik initialValues={{ link: \"\" }} onSubmit={handleJoinServer}>\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <ModalHeader textAlign=\"center\" fontWeight=\"bold\" pb=\"0\">\r\n              Join a Server\r\n            </ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody pb={3}>\r\n              <Text fontSize=\"14px\" textColor=\"brandGray.accent\">\r\n                Enter an invite below to join an existing server\r\n              </Text>\r\n              <InputField label=\"invite link\" name=\"link\" />\r\n\r\n              <Text\r\n                mt=\"4\"\r\n                fontSize=\"12px\"\r\n                fontWeight=\"semibold\"\r\n                textColor=\"brandGray.accent\"\r\n                textTransform=\"uppercase\"\r\n              >\r\n                invite links should look like\r\n              </Text>\r\n\r\n              <Text mt=\"2\" fontSize=\"12px\" textColor=\"brandGray.accent\">\r\n                drqgi2\r\n              </Text>\r\n              <Text fontSize=\"12px\" textColor=\"brandGray.accent\">\r\n                https://discord.gg/drqgi2\r\n              </Text>\r\n            </ModalBody>\r\n\r\n            <ModalFooter bg=\"brandGray.dark\">\r\n              <Button mr={6} variant=\"link\" onClick={goBack} fontSize={\"14px\"}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                background=\"highlight.standard\"\r\n                color=\"white\"\r\n                type=\"submit\"\r\n                _hover={{ bg: \"highlight.hover\" }}\r\n                _active={{ bg: \"highlight.active\" }}\r\n                _focus={{ boxShadow: \"none\" }}\r\n                isLoading={isSubmitting}\r\n                fontSize={\"14px\"}\r\n              >\r\n                Join Server\r\n              </Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </ModalContent>\r\n  );\r\n}\r\n\r\nfunction CreateServerModal({ goBack, submitClose }) {\r\n  const current = userStore(state => state.current);\r\n  const cache = useQueryClient();\r\n  const history = useHistory();\r\n\r\n  async function handleCreateServer(values, { setErrors }) {\r\n    try {\r\n      const { data } = await createGuild(values);\r\n      if (data) {\r\n        cache.setQueryData(gKey, guilds => {\r\n          return [...guilds, data];\r\n        });\r\n      }\r\n      submitClose();\r\n      history.push(`/channels/${data.id}/${data.default_channel_id}`);\r\n    } catch (err) {\r\n      setErrors(toErrorMap(err));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ModalContent bg=\"brandGray.light\">\r\n      <Formik\r\n        initialValues={{\r\n          name: `${current.username}'s server`\r\n        }}\r\n        validationSchema={GuildSchema}\r\n        onSubmit={handleCreateServer}\r\n      >\r\n        {({ isSubmitting, values }) => (\r\n          <Form>\r\n            <ModalHeader textAlign=\"center\" fontWeight=\"bold\" pb=\"0\">\r\n              Create your server\r\n            </ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody pb={3}>\r\n              <InputField label=\"server name\" name=\"name\" value={values.name} />\r\n            </ModalBody>\r\n\r\n            <ModalFooter bg=\"brandGray.dark\">\r\n              <Button mr={6} fontSize={\"14px\"} variant=\"link\" onClick={goBack}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                background=\"highlight.standard\"\r\n                color=\"white\"\r\n                type=\"submit\"\r\n                _hover={{ bg: \"highlight.hover\" }}\r\n                _active={{ bg: \"highlight.active\" }}\r\n                _focus={{ boxShadow: \"none\" }}\r\n                isLoading={isSubmitting}\r\n                fontSize={\"14px\"}\r\n              >\r\n                Create\r\n              </Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </ModalContent>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\nimport { AiOutlinePlus } from \"react-icons/ai\";\r\nimport StyledTooltip from \"./StyledTooltip\";\r\nimport { HoverGuildPill } from \"components/shared/GuildPills\";\r\n\r\nexport default function AddGuildIcon({ onOpen }) {\r\n  const [isHover, setHover] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {isHover && <HoverGuildPill />}\r\n      <StyledTooltip label={\"Add a Server\"} position={\"right\"}>\r\n        <Flex\r\n          direction={\"column\"}\r\n          m={\"auto\"}\r\n          align={\"center\"}\r\n          justify={\"center\"}\r\n          bg={\"brandGray.light\"}\r\n          borderRadius={\"50%\"}\r\n          h={\"48px\"}\r\n          w={\"48px\"}\r\n          _hover={{\r\n            cursor: \"pointer\",\r\n            borderRadius: \"35%\",\r\n            bg: \"brandGreen\",\r\n            color: \"white\",\r\n          }}\r\n          onClick={onOpen}\r\n          onMouseLeave={() => setHover(false)}\r\n          onMouseEnter={() => setHover(true)}\r\n        >\r\n          <AiOutlinePlus fontSize=\"25px\" />\r\n        </Flex>\r\n      </StyledTooltip>\r\n    </>\r\n  );\r\n}\r\n","import { Flex, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function NotificationIcon({ count }) {\r\n  return (\r\n    <Flex\r\n      borderRadius={\"50%\"}\r\n      bg={\"menuRed\"}\r\n      position={\"absolute\"}\r\n      bottom={0}\r\n      right={0}\r\n      transform={\"translate(25%, 25%)\"}\r\n      border={\"0.2em solid\"}\r\n      borderColor={\"brandBorder\"}\r\n      w={\"1.4em\"}\r\n      h={\"1.4em\"}\r\n      justify={\"center\"}\r\n      align={\"center\"}\r\n    >\r\n      <Text fontSize={\"11px\"} fontWeight={\"bold\"}>\r\n        {count}\r\n      </Text>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport function PingIcon({ count }) {\r\n  return (\r\n    <Flex\r\n      borderRadius={\"50%\"}\r\n      bg={\"menuRed\"}\r\n      w={\"1.2em\"}\r\n      h={\"1.2em\"}\r\n      justify={\"center\"}\r\n      align={\"center\"}\r\n      ml={2}\r\n    >\r\n      <Text fontSize={\"11px\"} fontWeight={\"bold\"}>\r\n        {count}\r\n      </Text>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Divider, Flex } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport homeStore from \"stores/homeStore\";\r\nimport { ActiveGuildPill, HoverGuildPill } from \"components/shared/GuildPills\";\r\nimport NotificationIcon from \"components/shared/NotificationIcon\";\r\nimport StyledTooltip from \"./StyledTooltip\";\r\n\r\nexport default function HomeIcon() {\r\n  const location = useLocation();\r\n  const isActive = location.pathname === \"/channels/me\";\r\n  const [isHover, setHover] = useState(false);\r\n\r\n  const notification = homeStore((state) => state.notifCount);\r\n  const reset = homeStore((state) => state.reset);\r\n\r\n  useEffect(() => {\r\n    if (isActive) reset();\r\n  });\r\n\r\n  return (\r\n    <StyledTooltip label={\"Home\"} position={\"right\"}>\r\n      <Flex direction=\"column\" my=\"2\" align=\"center\">\r\n        {isActive && <ActiveGuildPill />}\r\n        {isHover && <HoverGuildPill />}\r\n        <Link to=\"/channels/me\">\r\n          <Flex\r\n            direction=\"column\"\r\n            m=\"auto\"\r\n            align=\"center\"\r\n            justify=\"center\"\r\n            bg={isActive ? \"highlight.standard\" : \"brandGray.light\"}\r\n            borderRadius={isActive ? \"35%\" : \"50%\"}\r\n            h=\"48px\"\r\n            w=\"48px\"\r\n            color=\"white\"\r\n            position={\"relative\"}\r\n            _hover={{\r\n              cursor: \"pointer\",\r\n              borderRadius: \"35%\",\r\n              bg: \"highlight.standard\",\r\n            }}\r\n            onMouseLeave={() => setHover(false)}\r\n            onMouseEnter={() => setHover(true)}\r\n          >\r\n            <Logo />\r\n            {notification > 0 && <NotificationIcon count={notification} />}\r\n          </Flex>\r\n        </Link>\r\n        <Divider mt=\"2\" w=\"40px\" />\r\n      </Flex>\r\n    </StyledTooltip>\r\n  );\r\n}\r\n\r\nfunction Logo() {\r\n  return <img src=\"/small-logo.png\" style={{ padding: \"5px\" }} alt=\"logo\" />;\r\n}\r\n","import { Box, GridItem, UnorderedList, useDisclosure } from \"@chakra-ui/react\";\r\nimport { getUserGuilds } from \"api/handler/guilds\";\r\nimport useGuildSocket from \"api/ws/useGuildSocket\";\r\nimport GuildListItem from \"components/items/GuildListItem\";\r\nimport AddGuildModal from \"components/modals/AddGuildModal\";\r\nimport AddGuildIcon from \"components/sections/AddGuildIcon\";\r\nimport HomeIcon from \"components/sections/HomeIcon\";\r\nimport React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { gKey } from \"utils/querykeys\";\r\nimport guildScrollbarCss from \"./css/GuildScrollerCSS\";\r\n\r\nexport default function GuildList() {\r\n  const { data } = useQuery(gKey, () => getUserGuilds().then(res => res.data));\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  useGuildSocket();\r\n\r\n  return (\r\n    <GridItem\r\n      gridColumn={1}\r\n      gridRow={\"1 / 4\"}\r\n      bg=\"brandGray.darker\"\r\n      overflowY=\"auto\"\r\n      css={guildScrollbarCss}\r\n      zIndex={2}\r\n    >\r\n      <HomeIcon />\r\n      <UnorderedList listStyleType=\"none\" ml=\"0\">\r\n        {data?.map(guild => (\r\n          <GuildListItem key={guild.id} guild={guild} />\r\n        ))}\r\n      </UnorderedList>\r\n      <AddGuildIcon onOpen={onOpen} />\r\n      {isOpen && <AddGuildModal isOpen={isOpen} onClose={onClose} />}\r\n      <Box h=\"20px\" />\r\n    </GridItem>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\nimport { gKey } from \"utils/querykeys\";\r\nimport getSocket from \"../getSocket\";\r\n\r\nexport default function useGuildSocket() {\r\n  const history = useHistory();\r\n  const cache = useQueryClient();\r\n  const current = userStore((state) => state.current);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const socket = getSocket();\r\n    socket.emit(\"joinUser\", current?.id);\r\n\r\n    socket.on(\"edit_guild\", (editedGuild) => {\r\n      cache.setQueryData(gKey, (d) => {\r\n        const index = d?.findIndex((c) => c.id === editedGuild.id);\r\n        if (index !== -1) {\r\n          d[index] = {\r\n            ...d[index],\r\n            name: editedGuild.name,\r\n            icon: editedGuild.icon,\r\n          };\r\n        }\r\n        return d;\r\n      });\r\n    });\r\n\r\n    socket.on(\"delete_guild\", (deleteId) => {\r\n      cache.setQueryData(gKey, (d) => {\r\n        const isActive = location.pathname.includes(deleteId);\r\n        if (isActive) {\r\n          history.replace(\"/channels/me\");\r\n        }\r\n        return d?.filter((g) => g.id !== deleteId);\r\n      });\r\n    });\r\n\r\n    socket.on(\"remove_from_guild\", (guildId) => {\r\n      cache.setQueryData(gKey, (d) => {\r\n        const isActive = location.pathname.includes(guildId);\r\n        if (isActive) {\r\n          history.replace(\"/channels/me\");\r\n        }\r\n        return d.filter((g) => g.id !== guildId);\r\n      });\r\n    });\r\n\r\n    socket.on(\"new_notification\", (id) => {\r\n      if (!location.pathname.includes(id)) {\r\n        cache.setQueryData(gKey, (d) => {\r\n          const index = d?.findIndex((c) => c.id === id);\r\n          if (index !== -1) {\r\n            d[index] = { ...d[index], hasNotification: true };\r\n          }\r\n          return d;\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", current?.id);\r\n      socket.disconnect();\r\n    };\r\n  }, [current, cache, history, location]);\r\n}\r\n","import {\r\n  Button,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  InputRightElement,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  useClipboard\r\n} from \"@chakra-ui/react\";\r\nimport { sendFriendRequest } from \"api/handler/account\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport userStore from \"stores/userStore\";\r\nimport { rKey } from \"utils/querykeys\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport InputField from \"components/shared/InputField\";\r\n\r\nexport default function AddFriendModal({ isOpen, onClose }) {\r\n  const current = userStore(state => state.current);\r\n  const cache = useQueryClient();\r\n  const { hasCopied, onCopy } = useClipboard(current?.id || \"\");\r\n\r\n  async function handleAddFriend(values, { setErrors }) {\r\n    if (values.id === \"\" && values.id.length !== 20) {\r\n      setErrors({ id: \"Enter a valid ID\" });\r\n    } else {\r\n      try {\r\n        const { data } = await sendFriendRequest(values.id);\r\n        if (data) {\r\n          onClose();\r\n          cache.invalidateQueries(rKey);\r\n        }\r\n      } catch (err) {\r\n        setErrors(toErrorMap(err));\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent bg=\"brandGray.light\">\r\n        <Formik initialValues={{ id: \"\" }} onSubmit={handleAddFriend}>\r\n          {({ isSubmitting }) => (\r\n            <Form>\r\n              <ModalHeader fontWeight=\"bold\" pb={\"0\"}>\r\n                ADD FRIEND\r\n              </ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody>\r\n                <Text mb=\"4\">You can add a friend with their UID.</Text>\r\n                <InputGroup mb={2}>\r\n                  <InputLeftAddon\r\n                    bg={\"#202225\"}\r\n                    borderColor={\"black\"}\r\n                    children=\"UID\"\r\n                  />\r\n                  <Input\r\n                    bg=\"brandGray.dark\"\r\n                    borderColor={hasCopied ? \"brandGreen\" : \"black\"}\r\n                    borderRadius=\"3px\"\r\n                    focusBorderColor=\"highlight.standard\"\r\n                    value={current?.id || \"\"}\r\n                    isReadOnly\r\n                  />\r\n                  <InputRightElement width=\"4.5rem\">\r\n                    <Button\r\n                      h=\"1.75rem\"\r\n                      size=\"sm\"\r\n                      bg={hasCopied ? \"brandGreen\" : \"highlight.standard\"}\r\n                      color=\"white\"\r\n                      _hover={{ bg: \"highlight.hover\" }}\r\n                      _active={{ bg: \"highlight.active\" }}\r\n                      _focus={{ boxShadow: \"none\" }}\r\n                      onClick={onCopy}\r\n                    >\r\n                      {hasCopied ? \"Copied\" : \"Copy\"}\r\n                    </Button>\r\n                  </InputRightElement>\r\n                </InputGroup>\r\n\r\n                <InputField label=\"Enter a user ID\" name=\"id\" />\r\n              </ModalBody>\r\n              <ModalFooter bg=\"brandGray.dark\" mt=\"2\">\r\n                <Button\r\n                  mr={6}\r\n                  variant=\"link\"\r\n                  onClick={onClose}\r\n                  fontSize={\"14px\"}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  background=\"highlight.standard\"\r\n                  color=\"white\"\r\n                  type=\"submit\"\r\n                  _hover={{ bg: \"highlight.hover\" }}\r\n                  _active={{ bg: \"highlight.active\" }}\r\n                  _focus={{ boxShadow: \"none\" }}\r\n                  isLoading={isSubmitting}\r\n                  fontSize={\"14px\"}\r\n                >\r\n                  Send Friend Request\r\n                </Button>\r\n              </ModalFooter>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Flex,\r\n  GridItem,\r\n  Icon,\r\n  LightMode,\r\n  Text,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { FiUsers } from \"react-icons/fi\";\r\nimport homeStore from \"stores/homeStore\";\r\nimport AddFriendModal from \"components/modals/AddFriendModal\";\r\nimport PingIcon from \"components/shared/NotificationIcon\";\r\n\r\nexport default function FriendsListHeader() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toggle = homeStore((state) => state.toggleDisplay);\r\n  const isPending = homeStore((state) => state.isPending);\r\n  const requests = homeStore((state) => state.requestCount);\r\n\r\n  return (\r\n    <GridItem\r\n      gridColumn={3}\r\n      gridRow={\"1\"}\r\n      bg=\"brandGray.light\"\r\n      padding=\"10px\"\r\n      zIndex=\"2\"\r\n      boxShadow=\"md\"\r\n    >\r\n      <Flex align=\"center\" justify=\"space-between\">\r\n        <Flex align=\"center\" ml={2} fontSize=\"14px\">\r\n          <Icon as={FiUsers} fontSize=\"20px\" />\r\n          <Text ml=\"2\" fontWeight=\"semibold\">\r\n            Friends\r\n          </Text>\r\n          <Button\r\n            fontSize=\"14px\"\r\n            ml={\"4\"}\r\n            size={\"xs\"}\r\n            colorScheme={\"gray\"}\r\n            onClick={() => {\r\n              if (isPending) toggle();\r\n            }}\r\n            variant={!isPending ? \"solid\" : \"ghost\"}\r\n          >\r\n            Friends\r\n          </Button>\r\n          <Button\r\n            fontSize=\"14px\"\r\n            size={\"xs\"}\r\n            ml={\"2\"}\r\n            colorScheme={\"gray\"}\r\n            variant={isPending ? \"solid\" : \"ghost\"}\r\n            onClick={() => {\r\n              if (!isPending) toggle();\r\n            }}\r\n          >\r\n            Pending\r\n            {requests > 0 && <PingIcon count={requests} />}\r\n          </Button>\r\n        </Flex>\r\n        <LightMode>\r\n          <Button\r\n            fontSize=\"14px\"\r\n            size={\"xs\"}\r\n            bg={\"brandGreen\"}\r\n            _hover={{ bg: \"brandGreen\" }}\r\n            _active={{ bg: \"brandGreen\" }}\r\n            onClick={onOpen}\r\n          >\r\n            Add Friend\r\n          </Button>\r\n        </LightMode>\r\n      </Flex>\r\n      {isOpen && <AddFriendModal isOpen={isOpen} onClose={onClose} />}\r\n    </GridItem>\r\n  );\r\n}\r\n","import {\r\n  Avatar,\r\n  AvatarBadge,\r\n  Flex,\r\n  IconButton,\r\n  ListItem,\r\n  Text,\r\n  useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { FaEllipsisV } from \"react-icons/fa\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getOrCreateDirectMessage } from \"api/handler/dm\";\r\nimport { dmKey } from \"utils/querykeys\";\r\nimport RemoveFriendModal from \"components/modals/RemoveFriendModal\";\r\n\r\nexport default function FriendsListItem({ friend }) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const history = useHistory();\r\n  const cache = useQueryClient();\r\n\r\n  async function getDMChannel() {\r\n    const { data } = await getOrCreateDirectMessage(friend.id);\r\n    if (data) {\r\n      cache.invalidateQueries(dmKey);\r\n      history.push(`/channels/me/${data.id}`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ListItem\r\n      p=\"3\"\r\n      mx=\"3\"\r\n      _hover={{\r\n        bg: \"brandGray.dark\",\r\n        borderRadius: \"5px\"\r\n      }}\r\n    >\r\n      <Flex align=\"center\" justify=\"space-between\">\r\n        <Flex\r\n          align=\"center\"\r\n          w={\"full\"}\r\n          onClick={getDMChannel}\r\n          _hover={{ cursor: \"pointer\" }}\r\n        >\r\n          <Avatar size=\"sm\" src={friend.image}>\r\n            <AvatarBadge\r\n              boxSize=\"1.25em\"\r\n              bg={friend.isOnline ? \"green.500\" : \"gray.500\"}\r\n            />\r\n          </Avatar>\r\n          <Text ml=\"2\">{friend.username}</Text>\r\n        </Flex>\r\n        <IconButton\r\n          icon={<FaEllipsisV />}\r\n          borderRadius=\"50%\"\r\n          aria-label=\"remove friend\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            onOpen();\r\n          }}\r\n        />\r\n      </Flex>\r\n      {isOpen && <RemoveFriendModal id={friend.id} isOpen onClose={onClose} />}\r\n    </ListItem>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nexport default function OnlineLabel({ label }) {\r\n  return (\r\n    <Text\r\n      fontSize=\"12px\"\r\n      color={\"brandGray.accent\"}\r\n      textTransform={\"uppercase\"}\r\n      fontWeight={\"semibold\"}\r\n      mx={\"4\"}\r\n      mt={\"4\"}\r\n      mb={\"1\"}\r\n      w={\"50%\"}\r\n    >\r\n      {label}\r\n    </Text>\r\n  );\r\n}\r\n","import { Flex, Text, UnorderedList } from \"@chakra-ui/react\";\r\nimport { getFriends } from \"api/handler/account\";\r\nimport useFriendSocket from \"api/ws/useFriendSocket\";\r\nimport FriendsListItem from \"components/items/FriendsListItem\";\r\nimport OnlineLabel from \"components/sections/OnlineLabel\";\r\nimport React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fKey } from \"utils/querykeys\";\r\n\r\nexport default function FriendsList() {\r\n  const { data } = useQuery(fKey, () => getFriends().then(res => res.data));\r\n  useFriendSocket();\r\n\r\n  if (data?.length === 0) {\r\n    return (\r\n      <Flex justify={\"center\"} align={\"center\"} w={\"full\"}>\r\n        <Text textColor={\"brandGray.accent\"}>No one here yet</Text>\r\n      </Flex>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <UnorderedList listStyleType=\"none\" ml=\"0\" w=\"full\" mt=\"2\">\r\n        <OnlineLabel label={`friends — ${data?.length || 0}`} />\r\n        {data?.map(friend => (\r\n          <FriendsListItem key={friend.id} friend={friend} />\r\n        ))}\r\n      </UnorderedList>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport homeStore from \"stores/homeStore\";\r\nimport userStore from \"stores/userStore\";\r\nimport { fKey } from \"utils/querykeys\";\r\nimport getSocket from \"../getSocket\";\r\n\r\nexport default function useFriendSocket() {\r\n  const current = userStore((state) => state.current);\r\n  const setRequests = homeStore((state) => state.setRequests);\r\n  const cache = useQueryClient();\r\n\r\n  useEffect(() => {\r\n    const socket = getSocket();\r\n    socket.emit(\"joinUser\", current?.id);\r\n    socket.emit(\"getRequestCount\");\r\n    socket.on(\"add_friend\", (newFriend) => {\r\n      cache.setQueryData(fKey, (data) => {\r\n        return [...data, newFriend].sort((a, b) =>\r\n          a.username.localeCompare(b.username)\r\n        );\r\n      });\r\n    });\r\n\r\n    socket.on(\"remove_friend\", (memberId) => {\r\n      cache.setQueryData(fKey, (data) => {\r\n        return [...data?.filter((m) => m.id !== memberId)];\r\n      });\r\n    });\r\n\r\n    socket.on(\"toggle_online\", (memberId) => {\r\n      cache.setQueryData(fKey, (data) => {\r\n        const index = data?.findIndex((m) => m.id === memberId);\r\n        if (index !== -1) {\r\n          data[index].isOnline = true;\r\n        }\r\n        return data;\r\n      });\r\n    });\r\n\r\n    socket.on(\"toggle_offline\", (memberId) => {\r\n      cache.setQueryData(fKey, (data) => {\r\n        const index = data?.findIndex((m) => m.id === memberId);\r\n        if (index !== -1) {\r\n          data[index].isOnline = false;\r\n        }\r\n        return data;\r\n      });\r\n    });\r\n\r\n    socket.on(\"requestCount\", (count) => {\r\n      setRequests(count);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", current?.id);\r\n      socket.disconnect();\r\n    };\r\n  }, [cache, current, setRequests]);\r\n}\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Flex,\r\n  IconButton,\r\n  ListItem,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { acceptFriendRequest, declineFriendRequest } from \"api/handler/account\";\r\nimport StyledTooltip from \"components/sections/StyledTooltip\";\r\nimport React from \"react\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { BiCheck } from \"react-icons/bi\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { fKey, rKey } from \"utils/querykeys\";\r\n\r\nexport default function RequestListItem({ request }) {\r\n  const cache = useQueryClient();\r\n\r\n  const acceptRequest = async () => {\r\n    const { data } = await acceptFriendRequest(request.id);\r\n    if (data) {\r\n      cache.setQueryData(rKey, (d) => {\r\n        return d?.filter((r) => r.id !== request.id);\r\n      });\r\n      await cache.invalidateQueries(fKey);\r\n    }\r\n  };\r\n\r\n  const declineRequest = async () => {\r\n    const { data } = await declineFriendRequest(request.id);\r\n    if (data) {\r\n      cache.setQueryData(rKey, (d) => {\r\n        return d?.filter((r) => r.id !== request.id);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      p=\"3\"\r\n      mx=\"3\"\r\n      _hover={{\r\n        bg: \"brandGray.dark\",\r\n        borderRadius: \"5px\",\r\n      }}\r\n    >\r\n      <Flex align=\"center\" justify=\"space-between\">\r\n        <Flex align=\"center\">\r\n          <Avatar size=\"sm\" src={request.image} />\r\n          <Box ml=\"2\">\r\n            <Text>{request.username}</Text>\r\n            <Text fontSize={\"12px\"}>\r\n              {request.type === 1\r\n                ? \"Incoming Friend Request\"\r\n                : \"Outgoing Friend Request\"}\r\n            </Text>\r\n          </Box>\r\n        </Flex>\r\n        <Flex align={\"center\"}>\r\n          {request.type === 1 && (\r\n            <StyledTooltip label={\"Accept\"} position={\"top\"}>\r\n              <IconButton\r\n                icon={<BiCheck />}\r\n                borderRadius=\"50%\"\r\n                aria-label=\"accept request\"\r\n                fontSize={\"28px\"}\r\n                onClick={acceptRequest}\r\n                mr={\"2\"}\r\n              />\r\n            </StyledTooltip>\r\n          )}\r\n          <StyledTooltip label={\"Decline\"} position={\"top\"}>\r\n            <IconButton\r\n              icon={<AiOutlineClose />}\r\n              borderRadius=\"50%\"\r\n              aria-label=\"decline request\"\r\n              fontSize={\"20px\"}\r\n              onClick={declineRequest}\r\n            />\r\n          </StyledTooltip>\r\n        </Flex>\r\n      </Flex>\r\n    </ListItem>\r\n  );\r\n}\r\n","import { Flex, Text, UnorderedList } from \"@chakra-ui/react\";\r\nimport { getPendingRequests } from \"api/handler/account\";\r\nimport RequestListItem from \"components/items/RequestListItem\";\r\nimport OnlineLabel from \"components/sections/OnlineLabel\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport homeStore from \"stores/homeStore\";\r\nimport { rKey } from \"utils/querykeys\";\r\n\r\nexport default function PendingList() {\r\n  const { data } = useQuery(rKey, () =>\r\n    getPendingRequests().then(res => res.data)\r\n  );\r\n\r\n  const reset = homeStore(state => state.resetRequest);\r\n\r\n  useEffect(() => {\r\n    reset();\r\n  });\r\n\r\n  if (data?.length === 0) {\r\n    return (\r\n      <Flex justify={\"center\"} align={\"center\"} w={\"full\"}>\r\n        <Text textColor={\"brandGray.accent\"}>\r\n          There are no pending friend requests\r\n        </Text>\r\n      </Flex>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <UnorderedList listStyleType=\"none\" ml=\"0\" w=\"full\" mt=\"2\">\r\n        <OnlineLabel label={`Pending — ${data?.length || 0}`} />\r\n        {data?.map(request => (\r\n          <RequestListItem key={request.id} request={request} />\r\n        ))}\r\n      </UnorderedList>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { GridItem } from \"@chakra-ui/react\";\r\nimport FriendsListHeader from \"./FriendsListHeader\";\r\nimport FriendsList from \"./FriendsList\";\r\nimport PendingList from \"./PendingList\";\r\nimport { scrollbarCss } from \"utils/theme\";\r\nimport homeStore from \"stores/homeStore\";\r\n\r\nexport default function FriendsDashboard() {\r\n  const isPending = homeStore((state) => state.isPending);\r\n\r\n  return (\r\n    <>\r\n      <FriendsListHeader />\r\n      <GridItem\r\n        gridColumn={3}\r\n        gridRow={\"2\"}\r\n        bg=\"brandGray.light\"\r\n        mr=\"5px\"\r\n        display=\"flex\"\r\n        overflowY=\"auto\"\r\n        css={scrollbarCss}\r\n      >\r\n        {isPending ? <PendingList /> : <FriendsList />}\r\n      </GridItem>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Box, Flex, GridItem, Icon, Text } from \"@chakra-ui/react\";\r\nimport { FaAt } from \"react-icons/fa\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useGetCurrentDM from \"hooks/useGetCurrentDM\";\r\n\r\nexport default function DMHeader() {\r\n  const { channelId } = useParams();\r\n  const channel = useGetCurrentDM(channelId);\r\n\r\n  return (\r\n    <GridItem\r\n      gridColumn={3}\r\n      gridRow={\"1\"}\r\n      bg=\"brandGray.light\"\r\n      padding=\"10px\"\r\n      zIndex=\"2\"\r\n      boxShadow=\"md\"\r\n    >\r\n      <Flex align=\"center\" ml={2}>\r\n        <Icon as={FaAt} fontSize={\"20px\"} color={\"brandGray.accent\"} />\r\n        <Text ml=\"2\" fontWeight=\"semibold\">\r\n          {channel?.user.username}\r\n        </Text>\r\n        <Box\r\n          ml={\"2\"}\r\n          borderRadius={\"50%\"}\r\n          h={\"10px\"}\r\n          w={\"10px\"}\r\n          bg={channel?.user.isOnline ? \"green.500\" : \"gray.500\"}\r\n        />\r\n      </Flex>\r\n    </GridItem>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  AvatarBadge,\r\n  Flex,\r\n  Icon,\r\n  ListItem,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { closeDirectMessage } from \"api/handler/dm\";\r\nimport { dmKey } from \"utils/querykeys\";\r\n\r\nexport default function DMListItem({ dm }) {\r\n  const currentPath = `/channels/me/${dm.id}`;\r\n  const location = useLocation();\r\n  const isActive = location.pathname === currentPath;\r\n  const [showCloseButton, setShowButton] = useState(false);\r\n  const cache = useQueryClient();\r\n  const history = useHistory();\r\n\r\n  async function handleCloseDM(event) {\r\n    event.preventDefault();\r\n    await closeDirectMessage(dm.id);\r\n    cache.setQueryData(dmKey, d => {\r\n      return d?.filter(channel => channel.id !== dm.id);\r\n    });\r\n    if (isActive) {\r\n      history.replace(\"/channels/me\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Link to={`/channels/me/${dm.id}`}>\r\n      <ListItem\r\n        p=\"2\"\r\n        mx=\"2\"\r\n        color={isActive ? \"#fff\" : \"brandGray.accent\"}\r\n        _hover={{\r\n          bg: \"brandGray.light\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n          color: \"#fff\"\r\n        }}\r\n        bg={isActive ? \"brandGray.active\" : undefined}\r\n        onMouseLeave={() => setShowButton(false)}\r\n        onMouseEnter={() => setShowButton(true)}\r\n      >\r\n        <Flex align={\"center\"} justify={\"space-between\"}>\r\n          <Flex align=\"center\">\r\n            <Avatar size=\"sm\" src={dm.user.image}>\r\n              <AvatarBadge\r\n                boxSize=\"1.25em\"\r\n                bg={dm.user.isOnline ? \"green.500\" : \"gray.500\"}\r\n              />\r\n            </Avatar>\r\n            <Text ml=\"2\">{dm.user.username}</Text>\r\n          </Flex>\r\n          {showCloseButton && <Icon as={IoMdClose} onClick={handleCloseDM} />}\r\n        </Flex>\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Box, Flex } from \"@chakra-ui/react\";\r\n\r\nexport default function DMPlaceholder() {\r\n  return (\r\n    <Flex align={\"center\"} m=\"3\">\r\n      <Box w={\"32px\"} h={\"32px\"} borderRadius={\"50%\"} bg={\"brandGray.light\"} />\r\n      <Box\r\n        ml={2}\r\n        height=\"20px\"\r\n        w={\"144px\"}\r\n        bg={\"brandGray.light\"}\r\n        borderRadius={\"10px\"}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n","import { Flex, Icon, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { FiUsers } from \"react-icons/fi\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport homeStore from \"stores/homeStore\";\r\nimport { PingIcon } from \"components/shared/NotificationIcon\";\r\n\r\nexport default function FriendsListButton() {\r\n  const currentPath = `/channels/me`;\r\n  const location = useLocation();\r\n  const isActive = location.pathname === currentPath;\r\n  const requests = homeStore((state) => state.requestCount);\r\n\r\n  return (\r\n    <Link to={\"/channels/me\"}>\r\n      <Flex\r\n        m=\"2\"\r\n        p=\"3\"\r\n        align=\"center\"\r\n        justify={\"space-between\"}\r\n        color={isActive ? \"#fff\" : \"brandGray.accent\"}\r\n        _hover={{\r\n          bg: \"brandGray.light\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n          color: \"#fff\",\r\n        }}\r\n        bg={isActive ? \"brandGray.active\" : undefined}\r\n      >\r\n        <Flex align={\"center\"}>\r\n          <Icon as={FiUsers} fontSize=\"20px\" />\r\n          <Text fontSize=\"14px\" ml=\"4\" fontWeight=\"semibold\">\r\n            Friends\r\n          </Text>\r\n        </Flex>\r\n        {requests > 0 && <PingIcon count={requests} />}\r\n      </Flex>\r\n    </Link>\r\n  );\r\n}\r\n","import {\r\n  Avatar,\r\n  Flex,\r\n  IconButton,\r\n  Text,\r\n  Tooltip,\r\n  useClipboard,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { RiSettings5Fill } from \"react-icons/ri\";\r\nimport { Link } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\n\r\nexport default function AccountBar() {\r\n  const user = userStore((state) => state.current);\r\n  const { hasCopied, onCopy } = useClipboard(user?.id || \"\");\r\n\r\n  return (\r\n    <Flex\r\n      p=\"10px\"\r\n      pos=\"absolute\"\r\n      bottom=\"0\"\r\n      w=\"240px\"\r\n      bg=\"accountBar\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n    >\r\n      <Tooltip\r\n        hasArrow\r\n        label={hasCopied ? \"Copied!\" : \"Click to copy ID\"}\r\n        placement={\"top\"}\r\n        bg={hasCopied ? \"brandGreen\" : \"brandGray.darkest\"}\r\n        color={\"white\"}\r\n        closeOnClick={false}\r\n      >\r\n        <Flex\r\n          align=\"center\"\r\n          w={\"full\"}\r\n          mr={2}\r\n          _hover={{ cursor: \"pointer\" }}\r\n          onClick={onCopy}\r\n        >\r\n          <Avatar size=\"sm\" src={user?.image} />\r\n          <Text ml=\"2\">{user?.username}</Text>\r\n        </Flex>\r\n      </Tooltip>\r\n      <Link to={\"/account\"}>\r\n        <Tooltip\r\n          hasArrow\r\n          label={\"User Settings\"}\r\n          placement={\"top\"}\r\n          bg={\"brandGray.darkest\"}\r\n          color={\"white\"}\r\n        >\r\n          <IconButton\r\n            icon={<RiSettings5Fill />}\r\n            aria-label=\"settings\"\r\n            size=\"sm\"\r\n            fontSize=\"20px\"\r\n            variant=\"ghost\"\r\n          />\r\n        </Tooltip>\r\n      </Link>\r\n    </Flex>\r\n  );\r\n}\r\n","const dmScrollerCss = {\r\n  \"&::-webkit-scrollbar\": {\r\n    width: \"4px\",\r\n  },\r\n  \"&::-webkit-scrollbar-track\": {\r\n    width: \"4px\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb\": {\r\n    background: \"brandGray.darker\",\r\n    borderRadius: \"18px\",\r\n  },\r\n};\r\n\r\nexport default dmScrollerCss;\r\n","import { Box, GridItem, Text, UnorderedList } from \"@chakra-ui/react\";\r\nimport { getUserDMs } from \"api/handler/dm\";\r\nimport useDMSocket from \"api/ws/useDMSocket\";\r\nimport DMListItem from \"components/items/DMListItem\";\r\nimport DMPlaceholder from \"components/sections/DMPlaceholder\";\r\nimport FriendsListButton from \"components/sections/FriendsListButton\";\r\nimport React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { dmKey } from \"utils/querykeys\";\r\nimport AccountBar from \"../AccountBar\";\r\nimport dmScrollerCss from \"./css/dmScrollerCSS\";\r\n\r\nexport default function DMSidebar() {\r\n  const { data } = useQuery(dmKey, () => getUserDMs().then(res => res.data));\r\n  useDMSocket();\r\n\r\n  return (\r\n    <GridItem\r\n      gridColumn={\"2\"}\r\n      gridRow={\"1 / 4\"}\r\n      bg=\"brandGray.dark\"\r\n      overflowY=\"hidden\"\r\n      _hover={{ overflowY: \"auto\" }}\r\n      css={dmScrollerCss}\r\n    >\r\n      <FriendsListButton />\r\n      <Text\r\n        ml=\"4\"\r\n        textTransform=\"uppercase\"\r\n        fontSize=\"12px\"\r\n        fontWeight=\"semibold\"\r\n        color=\"brandGray.accent\"\r\n      >\r\n        DIRECT MESSAGES\r\n      </Text>\r\n      <UnorderedList listStyleType=\"none\" ml=\"0\" mt=\"4\">\r\n        {data?.map(dm => (\r\n          <DMListItem key={dm.id} dm={dm} />\r\n        ))}\r\n        {data?.length === 0 && (\r\n          <Box>\r\n            <DMPlaceholder />\r\n            <DMPlaceholder />\r\n            <DMPlaceholder />\r\n            <DMPlaceholder />\r\n            <DMPlaceholder />\r\n          </Box>\r\n        )}\r\n      </UnorderedList>\r\n      <AccountBar />\r\n    </GridItem>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport getSocket from \"../getSocket\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport userStore from \"stores/userStore\";\r\nimport { dmKey } from \"utils/querykeys\";\r\n\r\nexport default function useDMSocket() {\r\n  const current = userStore((state) => state.current);\r\n  const cache = useQueryClient();\r\n\r\n  useEffect(() => {\r\n    const socket = getSocket();\r\n    socket.emit(\"joinUser\", current?.id);\r\n\r\n    socket.on(\"push_to_top\", (dmId) => {\r\n      cache.setQueryData(dmKey, (data) => {\r\n        const index = data?.findIndex((d) => d.id === dmId);\r\n        if (index === 0 || index === -1) return [...data];\r\n        const dm = data[index];\r\n        return [dm, ...data.filter((d) => d.id !== dmId)];\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", current?.id);\r\n      socket.disconnect();\r\n    };\r\n  }, [current, cache]);\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AppLayout from \"components/layouts/AppLayout\";\r\nimport ChatScreen from \"components/layouts/guild/chat/ChatScreen\";\r\nimport MessageInput from \"components/layouts/guild/chat/MessageInput\";\r\nimport GuildList from \"components/layouts/guild/GuildList\";\r\nimport FriendsDashboard from \"components/layouts/home/dashboard/FriendsDashboard\";\r\nimport DMHeader from \"components/layouts/home/DMHeader\";\r\nimport DMSidebar from \"components/layouts/home/DMSidebar\";\r\n\r\nexport default function Home() {\r\n  const { channelId } = useParams();\r\n\r\n  return (\r\n    <AppLayout>\r\n      <GuildList />\r\n      <DMSidebar />\r\n      {channelId === undefined ? (\r\n        <FriendsDashboard />\r\n      ) : (\r\n        <>\r\n          <DMHeader />\r\n          <ChatScreen />\r\n          <MessageInput />\r\n        </>\r\n      )}\r\n    </AppLayout>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link as RLink, useHistory, useParams } from \"react-router-dom\";\r\nimport { Box, Flex, Image, Link, Text } from \"@chakra-ui/react\";\r\nimport { joinGuild } from \"api/handler/guilds\";\r\nimport { gKey } from \"utils/querykeys\";\r\nimport { useQueryClient } from \"react-query\";\r\n\r\nexport default function Invite() {\r\n  const [errors, setErrors] = useState(null);\r\n  const { link } = useParams();\r\n\r\n  const cache = useQueryClient();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function handleJoin() {\r\n      try {\r\n        const { data } = await joinGuild({ link });\r\n        if (data) {\r\n          cache.invalidateQueries(gKey);\r\n          history.push(`/channels/${data.id}/${data.default_channel_id}`);\r\n        }\r\n      } catch (err) {\r\n        const status = err?.response?.status;\r\n        if (status === 400 || status === 404) {\r\n          setErrors({ link: err?.response?.data?.message });\r\n        } else {\r\n          setErrors(\"An error occured. Please try again later.\");\r\n        }\r\n      }\r\n    }\r\n\r\n    handleJoin();\r\n  }, [link, history, cache]);\r\n\r\n  return (\r\n    <Flex minHeight=\"100vh\" align=\"center\" justify=\"center\" h=\"full\">\r\n      <Box textAlign={\"center\"}>\r\n        <Flex mb=\"4\" justify=\"center\">\r\n          <Image src=\"/logo.png\" w=\"80px\" />\r\n        </Flex>\r\n        <Text>Fetching server info. Please wait.</Text>\r\n        <Text>You will be automatically redirected.</Text>\r\n        {errors && (\r\n          <Box>\r\n            <Text my=\"2\" textColor=\"menuRed\">\r\n              {errors}\r\n            </Text>\r\n            <Text>\r\n              Click{\" \"}\r\n              <Link as={RLink} to=\"/channels/me\" color=\"highlight.standard\">\r\n                here\r\n              </Link>{\" \"}\r\n              to return.\r\n            </Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Box, Flex, Link, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport StyledTooltip from \"./StyledTooltip\";\r\n\r\nexport function FooterLink({ icon, href, label }) {\r\n  return (\r\n    <StyledTooltip label={label} position={\"top\"}>\r\n      <Link\r\n        display=\"inline-block\"\r\n        href={href}\r\n        aria-label={label}\r\n        isExternal\r\n        mx={2}\r\n      >\r\n        <Box as={icon} width=\"24px\" height=\"24px\" color=\"gray.400\" />\r\n      </Link>\r\n    </StyledTooltip>\r\n  );\r\n}\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Flex bottom={0} as=\"footer\" align=\"center\" justify=\"center\" w=\"100%\" p={8}>\r\n      <Box textAlign=\"center\">\r\n        <Text fontSize=\"xl\">\r\n          <span>Discord | 2021</span>\r\n        </Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Logo() {\r\n  return (\r\n    <svg width=\"124\" height=\"34\" viewBox=\"0 0 124 34\" className=\"logo-3LF899\">\r\n      <g fill=\"currentColor\">\r\n        <path d=\"M18.1558 14.297C17.1868 14.297 16.4218 15.13 16.4218 16.167C16.4218 17.204 17.2038 18.037 18.1558 18.037C19.1248 18.037 19.8898 17.204 19.8898 16.167C19.8898 15.13 19.1078 14.297 18.1558 14.297ZM11.9508 14.297C10.9818 14.297 10.2168 15.13 10.2168 16.167C10.2168 17.204 10.9988 18.037 11.9508 18.037C12.9198 18.037 13.6848 17.204 13.6848 16.167C13.7018 15.13 12.9198 14.297 11.9508 14.297Z\"></path>\r\n        <path d=\"M26.4178 0.152954H3.63783C1.71683 0.152954 0.152832 1.71695 0.152832 3.63795V26.418C0.152832 28.339 1.71683 29.903 3.63783 29.903H22.9158L22.0148 26.792L24.1908 28.798L26.2478 30.685L29.9198 33.864V3.63795C29.9028 1.71695 28.3388 0.152954 26.4178 0.152954ZM19.8558 22.168C19.8558 22.168 19.2438 21.437 18.7338 20.808C20.9608 20.179 21.8108 18.802 21.8108 18.802C21.1138 19.261 20.4508 19.584 19.8558 19.805C19.0058 20.162 18.1898 20.383 17.3908 20.536C15.7588 20.842 14.2628 20.757 12.9878 20.519C12.0188 20.332 11.1858 20.077 10.4888 19.788C10.0978 19.635 9.67283 19.448 9.24783 19.21C9.19683 19.176 9.14583 19.159 9.09483 19.125C9.06083 19.108 9.04383 19.091 9.02683 19.091C8.72083 18.921 8.55083 18.802 8.55083 18.802C8.55083 18.802 9.36683 20.145 11.5258 20.791C11.0158 21.437 10.3868 22.185 10.3868 22.185C6.62983 22.066 5.20183 19.618 5.20183 19.618C5.20183 14.195 7.64983 9.79195 7.64983 9.79195C10.0978 7.97295 12.4098 8.02395 12.4098 8.02395L12.5798 8.22795C9.51983 9.09495 8.12583 10.438 8.12583 10.438C8.12583 10.438 8.49983 10.234 9.12883 9.96195C10.9478 9.16295 12.3928 8.95895 12.9878 8.89095C13.0898 8.87395 13.1748 8.85695 13.2768 8.85695C14.3138 8.72095 15.4868 8.68695 16.7108 8.82295C18.3258 9.00995 20.0598 9.48595 21.8278 10.438C21.8278 10.438 20.4848 9.16295 17.5948 8.29595L17.8328 8.02395C17.8328 8.02395 20.1618 7.97295 22.5928 9.79195C22.5928 9.79195 25.0408 14.195 25.0408 19.618C25.0408 19.601 23.6128 22.049 19.8558 22.168ZM45.5258 7.42895H39.8818V13.77L43.6388 17.153V10.999H45.6448C46.9198 10.999 47.5488 11.611 47.5488 12.597V17.306C47.5488 18.292 46.9538 18.955 45.6448 18.955H39.8648V22.542H45.5088C48.5348 22.559 51.3738 21.046 51.3738 17.578V12.512C51.3908 8.97595 48.5518 7.42895 45.5258 7.42895ZM75.1058 17.578V12.376C75.1058 10.506 78.4718 10.081 79.4918 11.951L82.6028 10.693C81.3788 8.00695 79.1518 7.22495 77.2988 7.22495C74.2728 7.22495 71.2808 8.97595 71.2808 12.376V17.578C71.2808 21.012 74.2728 22.729 77.2308 22.729C79.1348 22.729 81.4128 21.794 82.6708 19.346L79.3388 17.816C78.5228 19.907 75.1058 19.397 75.1058 17.578ZM64.8208 13.09C63.6478 12.835 62.8658 12.41 62.8148 11.679C62.8828 9.92795 65.5858 9.85995 67.1668 11.543L69.6658 9.62195C68.1018 7.71795 66.3338 7.20795 64.5148 7.20795C61.7438 7.20795 59.0578 8.77195 59.0578 11.73C59.0578 14.603 61.2678 16.15 63.6988 16.524C64.9398 16.694 66.3168 17.187 66.2828 18.037C66.1808 19.652 62.8488 19.567 61.3358 17.731L58.9218 19.992C60.3328 21.811 62.2538 22.729 64.0558 22.729C66.8268 22.729 69.9038 21.131 70.0228 18.207C70.1928 14.518 67.5068 13.583 64.8208 13.09ZM53.4308 22.525H57.2388V7.42895H53.4308V22.525ZM117.64 7.42895H111.996V13.77L115.753 17.153V10.999H117.759C119.034 10.999 119.663 11.611 119.663 12.597V17.306C119.663 18.292 119.068 18.955 117.759 18.955H111.979V22.542H117.64C120.666 22.559 123.505 21.046 123.505 17.578V12.512C123.505 8.97595 120.666 7.42895 117.64 7.42895ZM89.9468 7.22495C86.8188 7.22495 83.7078 8.92495 83.7078 12.41V17.561C83.7078 21.012 86.8358 22.746 89.9808 22.746C93.1088 22.746 96.2198 21.012 96.2198 17.561V12.41C96.2198 8.94195 93.0748 7.22495 89.9468 7.22495ZM92.3948 17.561C92.3948 18.649 91.1708 19.21 89.9638 19.21C88.7398 19.21 87.5158 18.683 87.5158 17.561V12.41C87.5158 11.305 88.7058 10.71 89.8958 10.71C91.1368 10.71 92.3948 11.237 92.3948 12.41V17.561ZM109.888 12.41C109.803 8.87395 107.389 7.44595 104.278 7.44595H98.2428V22.542H102.102V17.748H102.782L106.284 22.542H111.044L106.93 17.357C108.749 16.779 109.888 15.198 109.888 12.41ZM104.346 14.45H102.102V10.999H104.346C106.743 10.999 106.743 14.45 104.346 14.45Z\"></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import { Button, Flex } from \"@chakra-ui/react\";\r\nimport Logo from \"components/shared/Logo\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\n\r\nexport default function Navbar() {\r\n  const current = userStore((state) => state.current);\r\n\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      w=\"100%\"\r\n      mb={8}\r\n      p={8}\r\n    >\r\n      <Flex align=\"center\">\r\n        <Logo />\r\n      </Flex>\r\n\r\n      <Flex align=\"center\" justify={\"flex-end\"}>\r\n        {current ? (\r\n          <Link to=\"/channels/me\">\r\n            <Button\r\n              _hover={{ bg: \"highlight.hover\" }}\r\n              _active={{ bg: \"highlight.active\" }}\r\n              _focus={{ boxShadow: \"none\" }}\r\n              size=\"md\"\r\n              rounded=\"md\"\r\n              variant=\"outline\"\r\n            >\r\n              Open App\r\n            </Button>\r\n          </Link>\r\n        ) : (\r\n          <>\r\n            <Link to=\"/login\">\r\n              <Button\r\n                color=\"white\"\r\n                _hover={{ bg: \"highlight.hover\" }}\r\n                _active={{ bg: \"highlight.active\" }}\r\n                _focus={{ boxShadow: \"none\" }}\r\n                size=\"md\"\r\n                rounded=\"md\"\r\n                variant=\"outline\"\r\n                mx=\"4\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </Link>\r\n\r\n            <Link to=\"/register\">\r\n              <Button\r\n                _hover={{ bg: \"highlight.hover\" }}\r\n                _active={{ bg: \"highlight.active\" }}\r\n                _focus={{ boxShadow: \"none\" }}\r\n                size=\"md\"\r\n                rounded=\"md\"\r\n                variant=\"outline\"\r\n              >\r\n                Register\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Flex } from \"@chakra-ui/react\";\r\nimport Footer from \"components/sections/Footer\";\r\nimport Navbar from \"components/sections/Navbar\";\r\nimport React from \"react\";\r\n\r\nexport default function LandingLayout({ children }) {\r\n  return (\r\n    <Flex direction=\"column\" align=\"center\" maxW={{ xl: \"1200px\" }} m=\"0 auto\">\r\n      <Navbar />\r\n      {children}\r\n      <Footer />\r\n    </Flex>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Image,\r\n  Link as CLink,\r\n  Heading,\r\n  Stack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default function Hero({\r\n  title,\r\n  subtitle,\r\n  image,\r\n  ctaLink,\r\n  ctaText,\r\n  ...rest\r\n}) {\r\n  return (\r\n    <Flex\r\n      align=\"center\"\r\n      justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\r\n      direction={{ base: \"column-reverse\", md: \"row\" }}\r\n      wrap=\"nowrap\"\r\n      minH=\"70vh\"\r\n      px={8}\r\n      mb={16}\r\n      {...rest}\r\n    >\r\n      <Stack\r\n        spacing={4}\r\n        w={{ base: \"80%\", md: \"40%\" }}\r\n        align={[\"center\", \"center\", \"flex-start\", \"flex-start\"]}\r\n      >\r\n        <Heading\r\n          as=\"h1\"\r\n          size=\"xl\"\r\n          fontWeight=\"bold\"\r\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n        >\r\n          {title}\r\n        </Heading>\r\n        <Heading\r\n          as=\"h2\"\r\n          size=\"md\"\r\n          opacity=\"0.8\"\r\n          fontWeight=\"normal\"\r\n          lineHeight={1.5}\r\n          textAlign={[\"center\", \"center\", \"left\", \"left\"]}\r\n        >\r\n          {subtitle}\r\n        </Heading>\r\n        <Link to={ctaLink}>\r\n          <Button\r\n            colorScheme=\"blue\"\r\n            borderRadius=\"8px\"\r\n            py=\"4\"\r\n            px=\"4\"\r\n            lineHeight=\"1\"\r\n            size=\"md\"\r\n          >\r\n            {ctaText}\r\n          </Button>\r\n        </Link>\r\n        <Text fontSize=\"xs\" mt={2} textAlign=\"center\" opacity=\"0.6\">\r\n          Got an account already?{\" \"}\r\n          <CLink as={Link} to=\"/login\">\r\n            Sign in\r\n          </CLink>\r\n        </Text>\r\n      </Stack>\r\n      <Box w={{ base: \"80%\", sm: \"60%\", md: \"50%\" }} mb={{ base: 12, md: 0 }}>\r\n        <Image src={image} size=\"50%\" rounded=\"1rem\" />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LandingLayout from \"components/layouts/LandingLayout\";\r\nimport Hero from \"components/sections/Hero\";\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <LandingLayout>\r\n      <Hero\r\n        title=\"An invite-only place with plenty of room to talk\"\r\n        subtitle=\"Discord servers are organized into topic-based channels where you can collaborate, share, and just talk about your day without clogging up a group chat.\"\r\n        image=\"/landing.svg\"\r\n        ctaText=\"Get Started\"\r\n        ctaLink=\"/register\"\r\n      />\r\n    </LandingLayout>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Image,\r\n  Link,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport { login } from \"api/handler/auth\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { Link as RLink, useHistory } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport InputField from \"components/shared/InputField\";\r\nimport { LoginSchema } from \"validation/auth.schema\";\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const setUser = userStore(state => state.setUser);\r\n\r\n  const handleSubmit = async (values, { setErrors }) => {\r\n    try {\r\n      const { data } = await login(values);\r\n      if (data) {\r\n        setUser(data);\r\n        history.push(\"/channels/me\");\r\n      }\r\n    } catch (err) {\r\n      // 401, 404\r\n      if (err?.response?.status === 401) {\r\n        setErrors({ password: \"Invalid credentials\" });\r\n      } else if (err?.response?.status === 404) {\r\n        setErrors({ email: \"No user found\" });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\r\n        <Flex mb=\"4\" justify=\"center\">\r\n          <Image src=\"/discord-logo.png\" w=\"80px\" />\r\n        </Flex>\r\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\r\n          <Box textAlign=\"center\">\r\n            <Heading fontSize=\"24px\">Welcome Back</Heading>\r\n          </Box>\r\n          <Box my={4} textAlign=\"left\">\r\n            <Formik\r\n              initialValues={{ email: \"\", password: \"\" }}\r\n              validationSchema={LoginSchema}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {({ isSubmitting }) => (\r\n                <Form>\r\n                  <InputField\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    type=\"email\"\r\n                  />\r\n                  <InputField\r\n                    label=\"password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"password\"\r\n                    type=\"password\"\r\n                  />\r\n\r\n                  <Box mt={4}>\r\n                    <Link\r\n                      as={RLink}\r\n                      to=\"/forgot-password\"\r\n                      textColor=\"highlight.standard\"\r\n                    >\r\n                      Forgot Password?\r\n                    </Link>\r\n                  </Box>\r\n\r\n                  <Button\r\n                    background=\"highlight.standard\"\r\n                    color=\"white\"\r\n                    width=\"full\"\r\n                    mt={4}\r\n                    type=\"submit\"\r\n                    isLoading={isSubmitting}\r\n                    _hover={{ bg: \"highlight.hover\" }}\r\n                    _active={{ bg: \"highlight.active\" }}\r\n                    _focus={{ boxShadow: \"none\" }}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                  <Text mt=\"4\">\r\n                    Don't have an account yet?{\" \"}\r\n                    <Link\r\n                      as={RLink}\r\n                      to=\"/register\"\r\n                      textColor=\"highlight.standard\"\r\n                    >\r\n                      Sign Up\r\n                    </Link>\r\n                  </Text>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Image,\r\n  Link,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { Link as RLink, useHistory } from \"react-router-dom\";\r\nimport InputField from \"components/shared/InputField\";\r\nimport { register } from \"api/handler/auth\";\r\nimport userStore from \"stores/userStore\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport { RegisterSchema } from \"validation/auth.schema\";\r\n\r\nexport default function Register() {\r\n  const history = useHistory();\r\n  const setUser = userStore(state => state.setUser);\r\n\r\n  const handleSubmit = async (values, { setErrors }) => {\r\n    try {\r\n      const { data } = await register(values);\r\n      if (data) {\r\n        setUser(data);\r\n        history.push(\"/channels/me\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err, toErrorMap(err));\r\n      setErrors(toErrorMap(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\r\n        <Flex mb=\"4\" justify=\"center\">\r\n          <Image src=\"/logo.png\" w=\"80px\" />\r\n        </Flex>\r\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\r\n          <Box textAlign=\"center\">\r\n            <Heading fontSize=\"24px\">Welcome to Discord</Heading>\r\n          </Box>\r\n          <Box my={4} textAlign=\"left\">\r\n            <Formik\r\n              initialValues={{ email: \"\", username: \"\", password: \"\" }}\r\n              validationSchema={RegisterSchema}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {({ isSubmitting }) => (\r\n                <Form>\r\n                  <InputField\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    type=\"email\"\r\n                  />\r\n\r\n                  <InputField label=\"username\" name=\"username\" />\r\n\r\n                  <InputField\r\n                    label=\"password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"password\"\r\n                    type=\"password\"\r\n                  />\r\n\r\n                  <Button\r\n                    background=\"highlight.standard\"\r\n                    color=\"white\"\r\n                    width=\"full\"\r\n                    mt={4}\r\n                    type=\"submit\"\r\n                    isLoading={isSubmitting}\r\n                    _hover={{ bg: \"highlight.hover\" }}\r\n                    _active={{ bg: \"highlight.active\" }}\r\n                    _focus={{ boxShadow: \"none\" }}\r\n                  >\r\n                    Register\r\n                  </Button>\r\n                  <Text mt=\"4\">\r\n                    Already have an account?{\" \"}\r\n                    <Link as={RLink} to=\"/login\" textColor=\"highlight.standard\">\r\n                      Sign In\r\n                    </Link>\r\n                  </Text>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  Image,\r\n  Link,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport { resetPassword } from \"api/handler/auth\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { Link as RLink, useHistory, useParams } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport InputField from \"components/shared/InputField\";\r\nimport { ResetPasswordSchema } from \"validation/auth.schema\";\r\n\r\nexport default function ResetPassword() {\r\n  const history = useHistory();\r\n  const { token } = useParams();\r\n  const [tokenError, setTokenError] = useState(\"\");\r\n  const setUser = userStore(state => state.setUser);\r\n\r\n  async function handleSubmit(values, { setErrors }) {\r\n    try {\r\n      const { data } = await resetPassword({ ...values, token });\r\n      if (data) {\r\n        setUser(data);\r\n        history.push(\"/channels/me\");\r\n      }\r\n    } catch (err) {\r\n      const errorMap = toErrorMap(err);\r\n      if (\"token\" in errorMap) {\r\n        setTokenError(errorMap.token);\r\n      }\r\n      setErrors(errorMap);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\r\n      <Box px={4} width=\"full\" maxWidth=\"500px\" textAlign=\"center\">\r\n        <Flex mb=\"4\" justify=\"center\">\r\n          <Image src=\"/logo.png\" w=\"80px\" />\r\n        </Flex>\r\n        <Box p={4} borderRadius={4} background=\"brandGray.light\">\r\n          <Box textAlign=\"center\">\r\n            <Heading fontSize=\"24px\">Reset Password</Heading>\r\n          </Box>\r\n          <Box my={4} textAlign=\"left\">\r\n            <Formik\r\n              initialValues={{ newPassword: \"\", confirmNewPassword: \"\" }}\r\n              validationSchema={ResetPasswordSchema}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {({ isSubmitting }) => (\r\n                <Form>\r\n                  <InputField\r\n                    label=\"New Password\"\r\n                    name=\"newPassword\"\r\n                    autoComplete=\"new-password\"\r\n                    type=\"password\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Confirm New Password\"\r\n                    name=\"confirmNewPassword\"\r\n                    type=\"password\"\r\n                  />\r\n\r\n                  <Button\r\n                    background=\"highlight.standard\"\r\n                    color=\"white\"\r\n                    width=\"full\"\r\n                    mt={4}\r\n                    type=\"submit\"\r\n                    isLoading={isSubmitting}\r\n                    _hover={{ bg: \"highlight.hover\" }}\r\n                    _active={{ bg: \"highlight.active\" }}\r\n                    _focus={{ boxShadow: \"none\" }}\r\n                  >\r\n                    Reset Password\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n            {tokenError ? (\r\n              <Flex direction=\"column\" mt=\"4\" justify=\"center\" align=\"center\">\r\n                <Text>Invalid or expired token.</Text>\r\n                <Link as={RLink} to=\"/forgot-password\" color=\"red\">\r\n                  Click here to get a new token\r\n                </Link>\r\n              </Flex>\r\n            ) : null}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import create from \"zustand\";\r\nimport { persist } from \"zustand/middleware\";\r\n\r\nconst settingsStore = create(\r\n  persist(\r\n    (set, get) => ({\r\n      showMembers: true,\r\n      toggleShowMembers: () => set({ showMembers: !get().showMembers }),\r\n    }),\r\n    {\r\n      name: \"settings-storage\",\r\n    }\r\n  )\r\n);\r\n\r\nexport default settingsStore;\r\n","import React from \"react\";\r\nimport { Flex, GridItem, Icon, Text } from \"@chakra-ui/react\";\r\nimport { FaHashtag } from \"react-icons/fa\";\r\nimport { BsPeopleFill } from \"react-icons/bs\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport settingsStore from \"stores/settingsStore\";\r\nimport useGetCurrentChannel from \"hooks/useGetCurrentChannel\";\r\nimport { cKey } from \"utils/querykeys\";\r\n\r\nexport default function ChannelHeader() {\r\n  const toggleMemberList = settingsStore((state) => state.toggleShowMembers);\r\n  const { guildId, channelId } = useParams();\r\n  const channel = useGetCurrentChannel(channelId, cKey(guildId));\r\n\r\n  return (\r\n    <GridItem\r\n      gridColumn={3}\r\n      gridRow={\"1\"}\r\n      bg=\"brandGray.light\"\r\n      padding=\"10px\"\r\n      zIndex=\"2\"\r\n      boxShadow=\"md\"\r\n    >\r\n      <Flex align=\"center\" justify=\"space-between\">\r\n        <Flex align=\"center\">\r\n          <FaHashtag />\r\n          <Text ml=\"2\" fontWeight=\"semibold\">\r\n            {channel?.name}\r\n          </Text>\r\n        </Flex>\r\n        <Icon\r\n          as={BsPeopleFill}\r\n          fontSize=\"20px\"\r\n          mr=\"2\"\r\n          _hover={{ cursor: \"pointer\" }}\r\n          onClick={toggleMemberList}\r\n        />\r\n      </Flex>\r\n    </GridItem>\r\n  );\r\n}\r\n","import { api } from \"../apiClient\";\r\n\r\nexport const getChannels = id => api.get(`/channels/${id}`);\r\n\r\nexport const createChannel = (id, body) => api.post(`/channels/${id}`, body);\r\n\r\nexport const editChannel = (guildId, channelId, body) =>\r\n  api.put(`/channels/${guildId}/${channelId}`, body);\r\n\r\nexport const deleteChannel = (guildId, channelId) =>\r\n  api.delete(`/channels/${guildId}/${channelId}`);\r\n\r\nexport const getPrivateChannelMembers = () => null;\r\n","import * as yup from 'yup';\r\n\r\nexport const ChannelSchema = yup.object().shape({\r\n  name: yup.string().min(3).max(30).required('This field is required'),\r\n  isPublic: yup.boolean().optional().default(true),\r\n  members: yup\r\n    .array(\r\n      yup.string().optional().max(20, 'Must provide memberIds'),\r\n    )\r\n    .optional()\r\n});\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  LightMode,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Switch,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  deleteChannel,\r\n  editChannel,\r\n  getPrivateChannelMembers\r\n} from \"api/handler/channel\";\r\nimport { getGuildMembers } from \"api/handler/guilds\";\r\nimport { CUIAutoComplete } from \"chakra-ui-autocomplete\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { AiOutlineLock } from \"react-icons/ai\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\nimport { useQuery } from \"react-query\";\r\nimport useGetCurrentChannel from \"hooks/useGetCurrentChannel\";\r\nimport { cKey, mKey } from \"utils/querykeys\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport { ChannelSchema } from \"validation/channel.schema\";\r\nimport InputField from \"components/shared/InputField\";\r\n\r\nexport default function ChannelSettingsModal({\r\n  guildId,\r\n  channelId,\r\n  isOpen,\r\n  onClose\r\n}) {\r\n  const key = mKey(guildId);\r\n  const { data } = useQuery(key, () =>\r\n    getGuildMembers(guildId).then(res => res.data)\r\n  );\r\n\r\n  const channel = useGetCurrentChannel(channelId, cKey(guildId));\r\n\r\n  const members = [];\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [screen, setScreen] = useState(\"START\");\r\n\r\n  const goBack = () => setScreen(\"START\");\r\n  const submitClose = () => {\r\n    setScreen(\"START\");\r\n    onClose();\r\n  };\r\n\r\n  async function handleEditChannel(values, { setErrors, resetForm }) {\r\n    try {\r\n      const ids = [];\r\n      selectedItems.map(item => ids.push(item.value));\r\n      const { data } = await editChannel(guildId, channelId, {\r\n        ...values,\r\n        members: ids\r\n      });\r\n      if (data) {\r\n        resetForm();\r\n        onClose();\r\n      }\r\n    } catch (err) {\r\n      setErrors(toErrorMap(err));\r\n    }\r\n  }\r\n\r\n  data?.map(m =>\r\n    members.push({ label: m.username, value: m.id, image: m.image })\r\n  );\r\n\r\n  // eslint-disable-next-line\r\n  const { data: current } = useQuery(`${channelId}-members`, async () => {\r\n    const { data } = await getPrivateChannelMembers(channelId);\r\n    const current = members.filter(m => data.includes(m.value));\r\n    setSelectedItems(current);\r\n    return current;\r\n  });\r\n\r\n  const handleCreateItem = item => {\r\n    setSelectedItems(curr => [...curr, item]);\r\n  };\r\n\r\n  const handleSelectedItemsChange = selectedItems => {\r\n    if (selectedItems) {\r\n      setSelectedItems(selectedItems);\r\n    }\r\n  };\r\n\r\n  const ListItem = selected => {\r\n    return (\r\n      <Flex align=\"center\">\r\n        <Avatar mr={2} size=\"sm\" src={selected.image} />\r\n        <Text textColor={\"#000\"}>{selected.label}</Text>\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  if (!channel) return null;\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      {screen === \"START\" && (\r\n        <ModalContent bg=\"brandGray.light\">\r\n          <Formik\r\n            initialValues={{\r\n              name: channel.name,\r\n              isPublic: channel.isPublic\r\n            }}\r\n            validationSchema={ChannelSchema}\r\n            onSubmit={handleEditChannel}\r\n          >\r\n            {({ isSubmitting, setFieldValue, values }) => (\r\n              <Form>\r\n                <ModalHeader textAlign=\"center\" fontWeight=\"bold\">\r\n                  Channel Settings\r\n                </ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                  <InputField label=\"channel name\" name=\"name\" />\r\n\r\n                  <FormControl\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"space-between\"\r\n                    mt=\"4\"\r\n                  >\r\n                    <FormLabel mb=\"0\">\r\n                      <Flex align=\"center\">\r\n                        <AiOutlineLock />\r\n                        <Text ml=\"2\">Private Channel</Text>\r\n                      </Flex>\r\n                    </FormLabel>\r\n                    <Switch\r\n                      defaultChecked={!values.isPublic}\r\n                      onChange={e => {\r\n                        setFieldValue(\"isPublic\", !e.target.checked);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                  <Text mt=\"4\" fontSize=\"14px\" textColor=\"brandGray.accent\">\r\n                    By making a channel private, only selected members will be\r\n                    able to view this channel\r\n                  </Text>\r\n                  {!values.isPublic && (\r\n                    <Box mt={\"2\"} pb={0}>\r\n                      <CUIAutoComplete\r\n                        label=\"Who can access this channel\"\r\n                        placeholder=\"\"\r\n                        onCreateItem={handleCreateItem}\r\n                        items={members}\r\n                        selectedItems={selectedItems}\r\n                        itemRenderer={ListItem}\r\n                        onSelectedItemsChange={changes =>\r\n                          handleSelectedItemsChange(changes.selectedItems)\r\n                        }\r\n                      />\r\n                    </Box>\r\n                  )}\r\n\r\n                  <Divider my={\"2\"} />\r\n\r\n                  <LightMode>\r\n                    <Button\r\n                      onClick={() => setScreen(\"CONFIRM\")}\r\n                      colorScheme={\"red\"}\r\n                      variant=\"ghost\"\r\n                      fontSize={\"14px\"}\r\n                      rightIcon={<FaRegTrashAlt />}\r\n                    >\r\n                      Delete Channel\r\n                    </Button>\r\n                  </LightMode>\r\n                </ModalBody>\r\n\r\n                <ModalFooter bg=\"brandGray.dark\">\r\n                  <Button\r\n                    onClick={onClose}\r\n                    mr={6}\r\n                    variant=\"link\"\r\n                    fontSize={\"14px\"}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    background=\"highlight.standard\"\r\n                    color=\"white\"\r\n                    type=\"submit\"\r\n                    _hover={{ bg: \"highlight.hover\" }}\r\n                    _active={{ bg: \"highlight.active\" }}\r\n                    _focus={{ boxShadow: \"none\" }}\r\n                    isLoading={isSubmitting}\r\n                    fontSize={\"14px\"}\r\n                  >\r\n                    Save Changes\r\n                  </Button>\r\n                </ModalFooter>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </ModalContent>\r\n      )}\r\n      {screen === \"CONFIRM\" && (\r\n        <DeleteChannelModal\r\n          goBack={goBack}\r\n          submitClose={submitClose}\r\n          name={channel.name}\r\n          channelId={channel.id}\r\n          guildId={guildId}\r\n        />\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction DeleteChannelModal({ goBack, submitClose, name, channelId, guildId }) {\r\n  async function handleDeleteChannel() {\r\n    submitClose();\r\n    await deleteChannel(guildId, channelId);\r\n  }\r\n\r\n  return (\r\n    <ModalContent bg=\"brandGray.light\">\r\n      <ModalHeader fontWeight=\"bold\" pb=\"0\">\r\n        Delete Channel\r\n      </ModalHeader>\r\n      <ModalBody pb={3}>\r\n        <Text>\r\n          Are you sure you want to delete #{name}? This cannot be undone.\r\n        </Text>\r\n      </ModalBody>\r\n\r\n      <ModalFooter bg=\"brandGray.dark\">\r\n        <Button mr={6} variant=\"link\" onClick={goBack} fontSize={\"14px\"}>\r\n          Cancel\r\n        </Button>\r\n        <LightMode>\r\n          <Button\r\n            colorScheme=\"red\"\r\n            fontSize={\"14px\"}\r\n            onClick={handleDeleteChannel}\r\n          >\r\n            Delete Channel\r\n          </Button>\r\n        </LightMode>\r\n      </ModalFooter>\r\n    </ModalContent>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Flex, Icon, ListItem, Text, useDisclosure } from \"@chakra-ui/react\";\r\nimport { FaHashtag, FaUserLock } from \"react-icons/fa\";\r\nimport { MdSettings } from \"react-icons/md\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\nimport ChannelSettingsModal from \"components/modals/ChannelSettingsModal\";\r\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\r\nimport { ChannelNotificationIndicator } from \"components/shared/GuildPills\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { cKey } from \"utils/querykeys\";\r\n\r\nexport default function ChannelListItem({ channel, guildId }) {\r\n  const currentPath = `/channels/${guildId}/${channel.id}`;\r\n  const location = useLocation();\r\n  const isActive = location.pathname === currentPath;\r\n  const [showSettings, setShowSettings] = useState(false);\r\n\r\n  const current = userStore((state) => state.current);\r\n  const guild = useGetCurrentGuild(guildId);\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const cache = useQueryClient();\r\n\r\n  useEffect(() => {\r\n    if (channel.hasNotification && isActive) {\r\n      cache.setQueryData(cKey(guildId), (d) => {\r\n        const index = d?.findIndex((c) => c.id === channel.id);\r\n        if (index !== -1) {\r\n          d[index] = { ...d[index], hasNotification: false };\r\n        }\r\n        return d;\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Link to={currentPath}>\r\n      <ListItem\r\n        p=\"5px\"\r\n        m=\"0 10px\"\r\n        color={\r\n          isActive || channel.hasNotification ? \"#fff\" : \"brandGray.accent\"\r\n        }\r\n        _hover={{\r\n          bg: \"brandGray.light\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n          color: \"#fff\",\r\n        }}\r\n        bg={isActive ? \"brandGray.active\" : undefined}\r\n        mb=\"2px\"\r\n        onMouseLeave={() => setShowSettings(false)}\r\n        onMouseEnter={() => setShowSettings(true)}\r\n      >\r\n        {channel.hasNotification && <ChannelNotificationIndicator />}\r\n        <Flex align=\"center\" justify={\"space-between\"}>\r\n          <Flex align=\"center\">\r\n            <Icon\r\n              as={channel.isPublic ? FaHashtag : FaUserLock}\r\n              color={\"brandGray.accent\"}\r\n            />\r\n            <Text ml=\"2\">{channel.name}</Text>\r\n          </Flex>\r\n          {current?.id === guild?.ownerId && (showSettings || isOpen) && (\r\n            <>\r\n              <Icon\r\n                as={MdSettings}\r\n                color={\"brandGray.accent\"}\r\n                fontSize={\"12px\"}\r\n                _hover={{ color: \"#fff\" }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  onOpen();\r\n                }}\r\n              />\r\n              {isOpen && (\r\n                <ChannelSettingsModal\r\n                  guildId={guildId}\r\n                  channelId={channel.id}\r\n                  isOpen={isOpen}\r\n                  onClose={onClose}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </Flex>\r\n      </ListItem>\r\n    </Link>\r\n  );\r\n}\r\n","import * as yup from 'yup';\r\n\r\nexport const MemberSchema = yup.object().shape({\r\n  nickname: yup\r\n    .string()\r\n    .nullable()\r\n    .min(3)\r\n    .max(30),\r\n  color: yup\r\n    .string()\r\n    .nullable()\r\n    .matches(/^#[0-9a-f]{3}(?:[0-9a-f]{3})?$/i, \"The color must be a valid hex color\")\r\n});","import {\r\n  Button,\r\n  Divider,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  changeGuildMemberSettings,\r\n  getGuildMemberSettings\r\n} from \"api/handler/guilds\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { TwitterPicker } from \"react-color\";\r\nimport { useQuery } from \"react-query\";\r\nimport userStore from \"stores/userStore\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport { MemberSchema } from \"validation/member.schema\";\r\nimport InputField from \"components/shared/InputField\";\r\n\r\nexport default function EditMemberModal({ guildId, isOpen, onClose }) {\r\n  const current = userStore(state => state.current);\r\n  const { data } = useQuery(`settings-${guildId}`, () =>\r\n    getGuildMemberSettings(guildId).then(res => res.data)\r\n  );\r\n  async function handleEditMemberAppearance(\r\n    values,\r\n    { setErrors, setFieldValue }\r\n  ) {\r\n    try {\r\n      if (values.color === \"#fff\") {\r\n        setFieldValue(\"color\", null);\r\n      }\r\n\r\n      const { data } = await changeGuildMemberSettings(guildId, values);\r\n      if (data) {\r\n        onClose();\r\n      }\r\n    } catch (err) {\r\n      setErrors(toErrorMap(err));\r\n    }\r\n  }\r\n\r\n  if (!data) return null;\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent bg=\"brandGray.light\">\r\n        <Formik\r\n          initialValues={{\r\n            color: data.color,\r\n            nickname: data.nickname\r\n          }}\r\n          validationSchema={MemberSchema}\r\n          onSubmit={handleEditMemberAppearance}\r\n        >\r\n          {({ isSubmitting, setFieldValue, values }) => (\r\n            <Form>\r\n              <ModalHeader fontWeight=\"bold\" pb={0}>\r\n                Change Appearance\r\n              </ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody>\r\n                <InputField\r\n                  color={values.color ?? undefined}\r\n                  label=\"nickname\"\r\n                  name=\"nickname\"\r\n                  value={values.nickname ?? current?.username}\r\n                />\r\n                <Text\r\n                  mt={\"2\"}\r\n                  ml={\"1\"}\r\n                  color={\"brandGray.accent\"}\r\n                  _hover={{\r\n                    cursor: \"pointer\",\r\n                    color: \"highlight.standard\"\r\n                  }}\r\n                  fontSize={\"14px\"}\r\n                  onClick={() => setFieldValue(\"nickname\", null)}\r\n                >\r\n                  Reset Nickname\r\n                </Text>\r\n\r\n                <Divider my={\"4\"} />\r\n\r\n                <TwitterPicker\r\n                  color={values.color || \"#fff\"}\r\n                  onChangeComplete={color => {\r\n                    if (color) setFieldValue(\"color\", color.hex);\r\n                  }}\r\n                  className={\"picker\"}\r\n                />\r\n\r\n                <Text\r\n                  mt={\"2\"}\r\n                  ml={\"1\"}\r\n                  color={\"brandGray.accent\"}\r\n                  _hover={{\r\n                    cursor: \"pointer\",\r\n                    color: \"highlight.standard\"\r\n                  }}\r\n                  fontSize={\"14px\"}\r\n                  onClick={() => setFieldValue(\"color\", \"#fff\")}\r\n                >\r\n                  Reset Color\r\n                </Text>\r\n              </ModalBody>\r\n\r\n              <ModalFooter bg=\"brandGray.dark\">\r\n                <Button\r\n                  onClick={onClose}\r\n                  mr={6}\r\n                  variant=\"link\"\r\n                  fontSize={\"14px\"}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  background=\"highlight.standard\"\r\n                  color=\"white\"\r\n                  type=\"submit\"\r\n                  _hover={{ bg: \"highlight.hover\" }}\r\n                  _active={{ bg: \"highlight.active\" }}\r\n                  _focus={{ boxShadow: \"none\" }}\r\n                  isLoading={isSubmitting}\r\n                  fontSize={\"14px\"}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </ModalFooter>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","const channelScrollbarCss = {\r\n  \"&::-webkit-scrollbar\": {\r\n    width: \"4px\",\r\n  },\r\n  \"&::-webkit-scrollbar-track\": {\r\n    width: \"4px\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb\": {\r\n    background: \"brandGray.darker\",\r\n    borderRadius: \"18px\",\r\n  },\r\n};\r\n\r\nexport default channelScrollbarCss;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Flex,\r\n  IconButton,\r\n  LightMode,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  Tooltip,\r\n  useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  deleteGuild,\r\n  editGuild,\r\n  getBanList,\r\n  invalidateInviteLinks,\r\n  unbanMember\r\n} from \"api/handler/guilds\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { BiUnlink } from \"react-icons/bi\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\nimport { ImHammer2 } from \"react-icons/im\";\r\nimport { IoCheckmarkCircle, IoPersonRemove } from \"react-icons/io5\";\r\nimport { useQuery, useQueryClient } from \"react-query\";\r\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport { GuildSchema } from \"validation/guild.schema\";\r\nimport channelScrollbarCss from \"../layouts/guild/css/ChannelScrollerCSS\";\r\nimport InputField from \"components/shared/InputField\";\r\nimport CropImageModal from \"./CropImageModal\";\r\n\r\nexport default function GuildSettingsModal({ guildId, isOpen, onClose }) {\r\n  const guild = useGetCurrentGuild(guildId);\r\n  const [screen, setScreen] = useState(\"START\");\r\n  const [isReset, setIsReset] = useState(false);\r\n\r\n  const goBack = () => setScreen(\"START\");\r\n  const submitClose = () => {\r\n    setScreen(\"START\");\r\n    onClose();\r\n  };\r\n\r\n  const {\r\n    isOpen: cropperIsOpen,\r\n    onOpen: cropperOnOpen,\r\n    onClose: cropperOnClose\r\n  } = useDisclosure();\r\n\r\n  const inputFile = useRef(null);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [cropImage, setCropImage] = useState(\"\");\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n\r\n  async function handleEditGuild(values, { setErrors, resetForm }) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"name\", values.name);\r\n      formData.append(\"image\", croppedImage ?? imageUrl);\r\n      const { data } = await editGuild(guildId, formData);\r\n      if (data) {\r\n        resetForm();\r\n        onClose();\r\n      }\r\n    } catch (err) {\r\n      setErrors(toErrorMap(err));\r\n    }\r\n  }\r\n\r\n  function applyCrop(file) {\r\n    setImageUrl(URL.createObjectURL(file));\r\n    setCroppedImage(new File([file], \"icon\"));\r\n    cropperOnClose();\r\n  }\r\n\r\n  async function handleInvalidateInvites() {\r\n    const { data } = await invalidateInviteLinks(guild.id);\r\n    if (data) {\r\n      setIsReset(true);\r\n    }\r\n  }\r\n\r\n  if (!guild) return null;\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      {screen === \"START\" && (\r\n        <ModalContent bg=\"brandGray.light\">\r\n          <Formik\r\n            initialValues={{\r\n              name: guild?.name\r\n            }}\r\n            validationSchema={GuildSchema}\r\n            onSubmit={handleEditGuild}\r\n          >\r\n            {({ isSubmitting }) => (\r\n              <Form>\r\n                <ModalHeader textAlign=\"center\" fontWeight=\"bold\" pb={0}>\r\n                  Server Overview\r\n                </ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n                  <Flex mb=\"4\" justify=\"center\">\r\n                    <Box textAlign={\"center\"}>\r\n                      <Tooltip label=\"Change Icon\" aria-label=\"Change Icon\">\r\n                        <Avatar\r\n                          size=\"xl\"\r\n                          name={guild?.name}\r\n                          bg={\"brandGray.darker\"}\r\n                          color={\"#fff\"}\r\n                          src={guild?.icon || \"\"}\r\n                          _hover={{ cursor: \"pointer\", opacity: 0.5 }}\r\n                          onClick={() => inputFile.current.click()}\r\n                        />\r\n                      </Tooltip>\r\n                      <Text\r\n                        mt={\"2\"}\r\n                        _hover={{\r\n                          cursor: \"pointer\",\r\n                          color: \"brandGray.accent\"\r\n                        }}\r\n                        onClick={() => {\r\n                          setCroppedImage(null);\r\n                          setImageUrl(null);\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </Text>\r\n                    </Box>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"image\"\r\n                      accept=\"image/*\"\r\n                      ref={inputFile}\r\n                      hidden\r\n                      onChange={async e => {\r\n                        if (!e.currentTarget.files) return;\r\n                        setCropImage(\r\n                          URL.createObjectURL(e.currentTarget.files[0])\r\n                        );\r\n                        cropperOnOpen();\r\n                      }}\r\n                    />\r\n                  </Flex>\r\n\r\n                  <InputField label=\"server name\" name=\"name\" />\r\n\r\n                  <Divider my={\"4\"} />\r\n\r\n                  <Text fontWeight={\"semibold\"} mb={2}>\r\n                    Additional Configuration\r\n                  </Text>\r\n\r\n                  <Flex align={\"center\"} justify={\"space-between\"} mb={\"2\"}>\r\n                    <Button\r\n                      onClick={handleInvalidateInvites}\r\n                      fontSize={\"14px\"}\r\n                      rightIcon={isReset ? <IoCheckmarkCircle /> : <BiUnlink />}\r\n                      colorScheme={isReset ? \"green\" : \"gray\"}\r\n                    >\r\n                      Invalidate Links\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => setScreen(\"BANLIST\")}\r\n                      fontSize={\"14px\"}\r\n                      rightIcon={<ImHammer2 />}\r\n                    >\r\n                      Bans\r\n                    </Button>\r\n                  </Flex>\r\n                  <Flex align={\"center\"} justify={\"space-between\"} mb={\"2\"}>\r\n                    <LightMode>\r\n                      <Button\r\n                        onClick={() => setScreen(\"CONFIRM\")}\r\n                        colorScheme={\"red\"}\r\n                        variant=\"ghost\"\r\n                        fontSize={\"14px\"}\r\n                        textColor={\"menuRed\"}\r\n                        rightIcon={<FaRegTrashAlt />}\r\n                      >\r\n                        Delete Server\r\n                      </Button>\r\n                    </LightMode>\r\n                  </Flex>\r\n                </ModalBody>\r\n\r\n                <ModalFooter bg=\"brandGray.dark\">\r\n                  <Button\r\n                    onClick={onClose}\r\n                    mr={6}\r\n                    variant=\"link\"\r\n                    fontSize={\"14px\"}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    background=\"highlight.standard\"\r\n                    color=\"white\"\r\n                    type=\"submit\"\r\n                    _hover={{ bg: \"highlight.hover\" }}\r\n                    _active={{ bg: \"highlight.active\" }}\r\n                    _focus={{ boxShadow: \"none\" }}\r\n                    isLoading={isSubmitting}\r\n                    fontSize={\"14px\"}\r\n                  >\r\n                    Save Changes\r\n                  </Button>\r\n                </ModalFooter>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n          {cropperIsOpen && (\r\n            <CropImageModal\r\n              isOpen={cropperIsOpen}\r\n              onClose={cropperOnClose}\r\n              initialImage={cropImage}\r\n              applyCrop={applyCrop}\r\n            />\r\n          )}\r\n        </ModalContent>\r\n      )}\r\n      {screen === \"CONFIRM\" && (\r\n        <DeleteGuildModal\r\n          goBack={goBack}\r\n          submitClose={submitClose}\r\n          name={guild?.name}\r\n          guildId={guildId}\r\n        />\r\n      )}\r\n      {screen === \"BANLIST\" && (\r\n        <BanListModal goBack={goBack} guildId={guildId} />\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction DeleteGuildModal({ goBack, submitClose, name, guildId }) {\r\n  async function handleDeleteGuild() {\r\n    submitClose();\r\n    await deleteGuild(guildId);\r\n  }\r\n\r\n  return (\r\n    <ModalContent bg=\"brandGray.light\">\r\n      <ModalHeader fontWeight=\"bold\" pb=\"0\">\r\n        Delete {name}\r\n      </ModalHeader>\r\n      <ModalBody pb={3}>\r\n        <Text>\r\n          Are you sure you want to delete <b>{name}</b>? This cannot be undone.\r\n        </Text>\r\n      </ModalBody>\r\n\r\n      <ModalFooter bg=\"brandGray.dark\">\r\n        <Button mr={6} variant=\"link\" onClick={goBack} fontSize={\"14px\"}>\r\n          Cancel\r\n        </Button>\r\n        <LightMode>\r\n          <Button\r\n            colorScheme=\"red\"\r\n            fontSize={\"14px\"}\r\n            onClick={handleDeleteGuild}\r\n          >\r\n            Delete Server\r\n          </Button>\r\n        </LightMode>\r\n      </ModalFooter>\r\n    </ModalContent>\r\n  );\r\n}\r\n\r\nfunction BanListModal({ goBack, guildId }) {\r\n  const key = `bans-${guildId}`;\r\n  const { data } = useQuery(key, () =>\r\n    getBanList(guildId).then(response => response.data)\r\n  );\r\n  const cache = useQueryClient();\r\n\r\n  const unbanUser = async id => {\r\n    const { data } = await unbanMember(guildId, id);\r\n    if (data) {\r\n      cache.setQueryData(key, d => {\r\n        return d?.filter(b => b.id !== id);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalContent bg=\"brandGray.light\" maxH={\"500px\"}>\r\n      <ModalHeader fontWeight=\"bold\" pb=\"0\">\r\n        {data?.length} Bans\r\n      </ModalHeader>\r\n      <ModalBody pb={3} overflowY={\"auto\"} css={channelScrollbarCss}>\r\n        <Text mb={2}>Bans are by account. Click on the icon to unban.</Text>\r\n\r\n        {data?.map(m => (\r\n          <Flex\r\n            p={\"3\"}\r\n            _hover={{\r\n              bg: \"brandGray.dark\",\r\n              borderRadius: \"5px\"\r\n            }}\r\n            align=\"center\"\r\n            justify=\"space-between\"\r\n          >\r\n            <Flex align=\"center\" w={\"full\"}>\r\n              <Avatar size=\"sm\" src={m.image} />\r\n              <Text ml=\"2\">{m.username}</Text>\r\n            </Flex>\r\n            <IconButton\r\n              icon={<IoPersonRemove />}\r\n              borderRadius=\"50%\"\r\n              aria-label=\"unban user\"\r\n              onClick={async e => {\r\n                e.preventDefault();\r\n                await unbanUser(m.id);\r\n              }}\r\n            />\r\n          </Flex>\r\n        ))}\r\n        {data?.length === 0 && <Text>No bans yet.</Text>}\r\n      </ModalBody>\r\n\r\n      <ModalFooter bg=\"brandGray.dark\">\r\n        <Button mr={6} variant=\"link\" onClick={goBack} fontSize={\"14px\"}>\r\n          Back\r\n        </Button>\r\n      </ModalFooter>\r\n    </ModalContent>\r\n  );\r\n}\r\n","import { Flex, Icon, MenuItem, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport function StyledMenuItem({ label, icon, handleClick }) {\r\n  return (\r\n    <MenuItem\r\n      _hover={{ bg: \"highlight.standard\", borderRadius: \"2px\" }}\r\n      onClick={handleClick}\r\n    >\r\n      <Flex align=\"center\" justify=\"space-between\" w=\"full\">\r\n        <Text>{label}</Text>\r\n        <Icon as={icon} />\r\n      </Flex>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nexport function StyledRedMenuItem({ label, icon, handleClick }) {\r\n  return (\r\n    <MenuItem\r\n      _hover={{ bg: \"menuRed\", color: \"#fff\", borderRadius: \"2px\" }}\r\n      onClick={handleClick}\r\n    >\r\n      <Flex align=\"center\" justify=\"space-between\" w=\"full\">\r\n        <Text>{label}</Text>\r\n        <Icon as={icon} />\r\n      </Flex>\r\n    </MenuItem>\r\n  );\r\n}\r\n","import { MenuList } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nexport default function StyledMenuList({ children }) {\r\n  return (\r\n    <MenuList bg=\"brandGray.darkest\" px=\"2\">\r\n      {children}\r\n    </MenuList>\r\n  );\r\n}\r\n","import {\r\n  Flex,\r\n  GridItem,\r\n  Heading,\r\n  Icon,\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { leaveGuild } from \"api/handler/guilds\";\r\nimport React from \"react\";\r\nimport { FaUserEdit, FaUserPlus } from \"react-icons/fa\";\r\nimport { FiChevronDown, FiX } from \"react-icons/fi\";\r\nimport { HiLogout } from \"react-icons/hi\";\r\nimport { MdAddCircle } from \"react-icons/md\";\r\nimport { RiSettings5Fill } from \"react-icons/ri\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\r\nimport { gKey } from \"utils/querykeys\";\r\nimport EditMemberModal from \"components/modals/EditMemberModal\";\r\nimport GuildSettingsModal from \"components/modals/GuildSettingsModal\";\r\nimport { StyledMenuItem, StyledRedMenuItem } from \"./StyledMenuItem\";\r\nimport StyledMenuList from \"./StyledMenuList\";\r\n\r\nexport default function GuildMenu({ channelOpen, inviteOpen }) {\r\n  const { guildId } = useParams();\r\n  const guild = useGetCurrentGuild(guildId);\r\n  const history = useHistory();\r\n  const cache = useQueryClient();\r\n\r\n  const user = userStore((state) => state.current);\r\n  const isOwner = guild?.ownerId === user?.id;\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const {\r\n    isOpen: memberOpen,\r\n    onOpen: memberOnOpen,\r\n    onClose: memberOnClose,\r\n  } = useDisclosure();\r\n\r\n  const handleLeave = async () => {\r\n    const { data } = await leaveGuild(guildId);\r\n    if (data) {\r\n      cache.setQueryData(gKey, (d) => {\r\n        return d.filter((g) => g.id !== guild?.id);\r\n      });\r\n      history.replace(\"/channels/me\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GridItem\r\n      gridColumn={2}\r\n      gridRow={\"1\"}\r\n      bg=\"brandGray.light\"\r\n      padding=\"10px\"\r\n      zIndex=\"2\"\r\n      boxShadow=\"md\"\r\n    >\r\n      <Menu placement=\"bottom-end\" isLazy>\r\n        {({ isOpen }) => (\r\n          <>\r\n            <Flex justify=\"space-between\" align=\"center\">\r\n              <Heading fontSize=\"20px\">{guild?.name}</Heading>\r\n              <MenuButton>\r\n                <Icon as={!isOpen ? FiChevronDown : FiX} />\r\n              </MenuButton>\r\n            </Flex>\r\n            <StyledMenuList>\r\n              <StyledMenuItem\r\n                label={\"Invite People\"}\r\n                icon={FaUserPlus}\r\n                handleClick={inviteOpen}\r\n              />\r\n              {isOwner && (\r\n                <StyledMenuItem\r\n                  label={\"Server Settings\"}\r\n                  icon={RiSettings5Fill}\r\n                  handleClick={onOpen}\r\n                />\r\n              )}\r\n              {isOwner && (\r\n                <StyledMenuItem\r\n                  label={\"Create Channel\"}\r\n                  icon={MdAddCircle}\r\n                  handleClick={channelOpen}\r\n                />\r\n              )}\r\n              <MenuDivider />\r\n              <StyledMenuItem\r\n                label={\"Change Appearance\"}\r\n                icon={FaUserEdit}\r\n                handleClick={memberOnOpen}\r\n              />\r\n              {!isOwner && (\r\n                <>\r\n                  <MenuDivider />\r\n                  <StyledRedMenuItem\r\n                    label={\"Leave Server\"}\r\n                    icon={HiLogout}\r\n                    handleClick={handleLeave}\r\n                  />\r\n                </>\r\n              )}\r\n            </StyledMenuList>\r\n          </>\r\n        )}\r\n      </Menu>\r\n      {isOpen && (\r\n        <GuildSettingsModal\r\n          guildId={guildId}\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n        />\r\n      )}\r\n      {memberOpen && (\r\n        <EditMemberModal\r\n          guildId={guildId}\r\n          isOpen={memberOpen}\r\n          onClose={memberOnClose}\r\n        />\r\n      )}\r\n    </GridItem>\r\n  );\r\n}\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Switch,\r\n  Text\r\n} from \"@chakra-ui/react\";\r\nimport { createChannel } from \"api/handler/channel\";\r\nimport { getGuildMembers } from \"api/handler/guilds\";\r\nimport { CUIAutoComplete } from \"chakra-ui-autocomplete\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { AiOutlineLock } from \"react-icons/ai\";\r\nimport { useQuery } from \"react-query\";\r\nimport { mKey } from \"utils/querykeys\";\r\nimport toErrorMap from \"utils/toErrorMap\";\r\nimport { ChannelSchema } from \"validation/channel.schema\";\r\nimport InputField from \"components/shared/InputField\";\r\n\r\nexport default function CreateChannelModal({ guildId, isOpen, onClose }) {\r\n  const key = mKey(guildId);\r\n  const { data } = useQuery(key, () =>\r\n    getGuildMembers(guildId).then(res => res.data)\r\n  );\r\n\r\n  async function handleCreateChannel(values, { setErrors, resetForm }) {\r\n    try {\r\n      const ids = [];\r\n      selectedItems.map(item => ids.push(item.value));\r\n      const { data } = await createChannel(guildId, {\r\n        ...values,\r\n        members: ids\r\n      });\r\n      if (data) {\r\n        resetForm();\r\n        onClose();\r\n      }\r\n    } catch (err) {\r\n      setErrors(toErrorMap(err));\r\n    }\r\n  }\r\n\r\n  const members = [];\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  data?.map(m =>\r\n    members.push({ label: m.username, value: m.id, image: m.image })\r\n  );\r\n\r\n  const handleCreateItem = item => {\r\n    setSelectedItems(curr => [...curr, item]);\r\n  };\r\n\r\n  const handleSelectedItemsChange = selectedItems => {\r\n    if (selectedItems) {\r\n      setSelectedItems(selectedItems);\r\n    }\r\n  };\r\n\r\n  const ListItem = selected => {\r\n    return (\r\n      <Flex align=\"center\">\r\n        <Avatar mr={2} size=\"sm\" src={selected.image} />\r\n        <Text textColor={\"#000\"}>{selected.label}</Text>\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent bg=\"brandGray.light\">\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            isPublic: true\r\n          }}\r\n          validationSchema={ChannelSchema}\r\n          onSubmit={handleCreateChannel}\r\n        >\r\n          {({ isSubmitting, setFieldValue, values }) => (\r\n            <Form>\r\n              <ModalHeader textAlign=\"center\" fontWeight=\"bold\">\r\n                Create Text Channel\r\n              </ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody>\r\n                <InputField label=\"channel name\" name=\"name\" />\r\n\r\n                <FormControl\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                  mt=\"4\"\r\n                >\r\n                  <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\r\n                    <Flex align=\"center\">\r\n                      <AiOutlineLock />\r\n                      <Text ml=\"2\">Private Channel</Text>\r\n                    </Flex>\r\n                  </FormLabel>\r\n                  <Switch\r\n                    onChange={e => {\r\n                      setFieldValue(\"isPublic\", !e.target.checked);\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n                <Text mt=\"4\" fontSize=\"14px\" textColor=\"brandGray.accent\">\r\n                  By making a channel private, only selected members will be\r\n                  able to view this channel\r\n                </Text>\r\n                {!values.isPublic && (\r\n                  <Box mt={\"2\"} pb={0}>\r\n                    <CUIAutoComplete\r\n                      label=\"Who can access this channel\"\r\n                      placeholder=\"\"\r\n                      onCreateItem={handleCreateItem}\r\n                      items={members}\r\n                      selectedItems={selectedItems}\r\n                      itemRenderer={ListItem}\r\n                      onSelectedItemsChange={changes =>\r\n                        handleSelectedItemsChange(changes.selectedItems)\r\n                      }\r\n                    />\r\n                  </Box>\r\n                )}\r\n              </ModalBody>\r\n\r\n              <ModalFooter bg=\"brandGray.dark\">\r\n                <Button\r\n                  onClick={onClose}\r\n                  fontSize={\"14px\"}\r\n                  mr={6}\r\n                  variant=\"link\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  background=\"highlight.standard\"\r\n                  color=\"white\"\r\n                  type=\"submit\"\r\n                  fontSize={\"14px\"}\r\n                  _hover={{ bg: \"highlight.hover\" }}\r\n                  _active={{ bg: \"highlight.active\" }}\r\n                  _focus={{ boxShadow: \"none\" }}\r\n                  isLoading={isSubmitting}\r\n                >\r\n                  Create Channel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  useClipboard\r\n} from \"@chakra-ui/react\";\r\nimport { getInviteLink } from \"api/handler/guilds\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function InviteModal({ isOpen, onClose }) {\r\n  const { guildId } = useParams();\r\n  const [inviteLink, setInviteLink] = useState(\"\");\r\n  const { hasCopied, onCopy } = useClipboard(inviteLink);\r\n  const [isPermanent, setPermanent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      async function fetchLink() {\r\n        const { data } = await getInviteLink(guildId, isPermanent);\r\n        if (data) {\r\n          setInviteLink(data);\r\n        }\r\n      }\r\n      fetchLink();\r\n    }\r\n  }, [isOpen, guildId, isPermanent]);\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n      <ModalOverlay />\r\n      <ModalContent bg=\"brandGray.light\">\r\n        <ModalHeader textAlign=\"center\" fontWeight=\"bold\" pb={\"0\"}>\r\n          Invite Link\r\n        </ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <Text mb=\"4\">\r\n            Share this link with others to grant access to this server\r\n          </Text>\r\n\r\n          <Checkbox onChange={e => setPermanent(e.target.checked)} mb={4}>\r\n            Make it unlimited / Never reset\r\n          </Checkbox>\r\n\r\n          <InputGroup>\r\n            <Input\r\n              bg=\"brandGray.dark\"\r\n              borderColor={hasCopied ? \"brandGreen\" : \"black\"}\r\n              borderRadius=\"3px\"\r\n              focusBorderColor=\"highlight.standard\"\r\n              value={inviteLink}\r\n              isReadOnly\r\n            />\r\n            <InputRightElement width=\"4.5rem\">\r\n              <Button\r\n                h=\"1.75rem\"\r\n                size=\"sm\"\r\n                bg={hasCopied ? \"brandGreen\" : \"highlight.standard\"}\r\n                color=\"white\"\r\n                type=\"submit\"\r\n                fontSize={\"14px\"}\r\n                _hover={{ bg: \"highlight.hover\" }}\r\n                _active={{ bg: \"highlight.active\" }}\r\n                _focus={{ boxShadow: \"none\" }}\r\n                onClick={onCopy}\r\n              >\r\n                {hasCopied ? \"Copied\" : \"Copy\"}\r\n              </Button>\r\n            </InputRightElement>\r\n          </InputGroup>\r\n\r\n          <Text my={\"2\"} fontSize={\"12px\"}>\r\n            {isPermanent\r\n              ? \"Your invite link won't expire\"\r\n              : \"Your invite link expires in 1 day and can only be used once\"}\r\n          </Text>\r\n        </ModalBody>\r\n\r\n        <ModalFooter bg=\"brandGray.dark\" />\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Box, GridItem, UnorderedList, useDisclosure } from \"@chakra-ui/react\";\r\nimport { getChannels } from \"api/handler/channel\";\r\nimport useChannelSocket from \"api/ws/useChannelSocket\";\r\nimport ChannelListItem from \"components/items/ChannelListItem\";\r\nimport GuildMenu from \"components/menus/GuildMenu\";\r\nimport CreateChannelModal from \"components/modals/CreateChannelModal\";\r\nimport InviteModal from \"components/modals/InviteModal\";\r\nimport React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { cKey } from \"utils/querykeys\";\r\nimport AccountBar from \"../AccountBar\";\r\nimport channelScrollbarCss from \"./css/ChannelScrollerCSS\";\r\n\r\nexport default function Channels() {\r\n  const {\r\n    isOpen: inviteIsOpen,\r\n    onOpen: inviteOpen,\r\n    onClose: inviteClose\r\n  } = useDisclosure();\r\n  const {\r\n    isOpen: channelIsOpen,\r\n    onOpen: channelOpen,\r\n    onClose: channelClose\r\n  } = useDisclosure();\r\n\r\n  const { guildId } = useParams();\r\n  const key = cKey(guildId);\r\n\r\n  const { data } = useQuery(key, () =>\r\n    getChannels(guildId).then(res => res.data)\r\n  );\r\n\r\n  useChannelSocket(guildId, key);\r\n\r\n  return (\r\n    <>\r\n      <GuildMenu channelOpen={channelOpen} inviteOpen={inviteOpen} />\r\n      <GridItem\r\n        gridColumn={2}\r\n        gridRow={\"2/4\"}\r\n        bg=\"brandGray.dark\"\r\n        overflowY=\"hidden\"\r\n        _hover={{ overflowY: \"auto\" }}\r\n        css={channelScrollbarCss}\r\n      >\r\n        {inviteIsOpen && (\r\n          <InviteModal isOpen={inviteIsOpen} onClose={inviteClose} />\r\n        )}\r\n        {channelIsOpen && (\r\n          <CreateChannelModal\r\n            guildId={guildId}\r\n            onClose={channelClose}\r\n            isOpen={channelIsOpen}\r\n          />\r\n        )}\r\n        <UnorderedList listStyleType=\"none\" ml=\"0\" mt=\"4\">\r\n          {data?.map(channel => (\r\n            <ChannelListItem\r\n              key={channel.id}\r\n              channel={channel}\r\n              guildId={guildId}\r\n            />\r\n          ))}\r\n          <Box h=\"16\" />\r\n        </UnorderedList>\r\n        <AccountBar />\r\n      </GridItem>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport getSocket from \"../getSocket\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\r\n\r\nexport default function useChannelSocket(guildId, key) {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const cache = useQueryClient();\r\n  const guild = useGetCurrentGuild(guildId);\r\n\r\n  useEffect(() => {\r\n    const socket = getSocket();\r\n    socket.emit(\"joinGuild\", guildId);\r\n\r\n    const disconnect = () => {\r\n      socket.emit(\"leaveGuild\", guildId);\r\n      socket.disconnect();\r\n    };\r\n\r\n    socket.on(\"add_channel\", newChannel => {\r\n      cache.invalidateQueries(key);\r\n    });\r\n\r\n    socket.on(\"edit_channel\", editedChannel => {\r\n      cache.setQueryData(key, d => {\r\n        const index = d?.findIndex(c => c.id === editedChannel.id);\r\n        if (index !== -1) {\r\n          d[index] = editedChannel;\r\n        } else if (editedChannel.isPublic) {\r\n          d.push(editedChannel);\r\n        }\r\n        return d;\r\n      });\r\n    });\r\n\r\n    socket.on(\"delete_channel\", deleteId => {\r\n      cache.setQueryData(key, d => {\r\n        const currentPath = `/channels/${guildId}/${deleteId}`;\r\n        if (location.pathname === currentPath && guild) {\r\n          if (deleteId === guild.default_channel_id) {\r\n            history.replace(\"/channels/me\");\r\n          } else {\r\n            history.replace(`${guild.default_channel_id}`);\r\n          }\r\n        }\r\n        return d?.filter(c => c.id !== deleteId);\r\n      });\r\n    });\r\n\r\n    socket.on(\"new_notification\", id => {\r\n      const currentPath = `/channels/${guildId}/${id}`;\r\n      if (location.pathname !== currentPath) {\r\n        cache.setQueryData(key, d => {\r\n          const index = d?.findIndex(c => c.id === id);\r\n          if (index !== -1) {\r\n            d[index] = { ...d[index], hasNotification: true };\r\n          }\r\n          return d;\r\n        });\r\n      }\r\n    });\r\n\r\n    window.addEventListener(\"beforeunload\", disconnect);\r\n\r\n    return () => disconnect();\r\n  }, [guildId, key, cache, history, location, guild]);\r\n}\r\n","import { Avatar, AvatarBadge, Flex, ListItem, Text } from \"@chakra-ui/react\";\r\nimport MemberContextMenu from \"components/menus/MemberContextMenu\";\r\nimport useGetCurrentGuild from \"hooks/useGetCurrentGuild\";\r\nimport React from \"react\";\r\nimport { useContextMenu } from \"react-contexify\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport userStore from \"stores/userStore\";\r\n\r\nexport default function MemberListItem({ member }) {\r\n  const { guildId } = useParams();\r\n  const current = userStore(state => state.current);\r\n  const guild = useGetCurrentGuild(guildId);\r\n  const isOwner = guild !== undefined && guild.ownerId === current?.id;\r\n  const { show } = useContextMenu({\r\n    id: member.id\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        p=\"2\"\r\n        mx=\"10px\"\r\n        color={\"brandGray.accent\"}\r\n        _hover={{\r\n          bg: \"brandGray.light\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n          color: \"#fff\"\r\n        }}\r\n        onContextMenu={show}\r\n      >\r\n        <Flex align=\"center\">\r\n          <Avatar size=\"sm\" src={member.image}>\r\n            <AvatarBadge\r\n              boxSize=\"1.25em\"\r\n              bg={member.isOnline ? \"green.500\" : \"gray.500\"}\r\n            />\r\n          </Avatar>\r\n          <Text ml=\"2\">{member.username}</Text>\r\n        </Flex>\r\n      </ListItem>\r\n      {member.id !== current?.id && (\r\n        <MemberContextMenu member={member} id={member.id} isOwner={isOwner} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","const memberScrollbarCss = {\r\n  \"&::-webkit-scrollbar\": {\r\n    width: \"4px\",\r\n  },\r\n  \"&::-webkit-scrollbar-track\": {\r\n    width: \"4px\",\r\n  },\r\n  \"&::-webkit-scrollbar-thumb\": {\r\n    background: \"brandGray.darker\",\r\n    borderRadius: \"18px\",\r\n  },\r\n};\r\n\r\nexport default memberScrollbarCss;\r\n","import { GridItem, UnorderedList } from \"@chakra-ui/react\";\r\nimport { getGuildMembers } from \"api/handler/guilds\";\r\nimport useMemberSocket from \"api/ws/useMemberSocket\";\r\nimport MemberListItem from \"components/items/MemberListItem\";\r\nimport React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { mKey } from \"utils/querykeys\";\r\nimport OnlineLabel from \"components/sections/OnlineLabel\";\r\nimport memberScrollbarCss from \"./css/MemberScrollerCSS\";\r\n\r\nexport default function MemberList() {\r\n  const { guildId } = useParams();\r\n  const key = mKey(guildId);\r\n  const { data } = useQuery(key, () =>\r\n    getGuildMembers(guildId).then(res => res.data)\r\n  );\r\n\r\n  const online = [];\r\n  const offline = [];\r\n\r\n  if (data) {\r\n    data.forEach(member => {\r\n      if (member.isOnline) {\r\n        online.push(member);\r\n      } else {\r\n        offline.push(member);\r\n      }\r\n    });\r\n  }\r\n\r\n  useMemberSocket(guildId, key);\r\n\r\n  return (\r\n    <GridItem\r\n      gridColumn={4}\r\n      gridRow={\"1 / 4\"}\r\n      bg=\"memberList\"\r\n      overflowY=\"hidden\"\r\n      _hover={{ overflowY: \"auto\" }}\r\n      css={memberScrollbarCss}\r\n    >\r\n      <UnorderedList listStyleType=\"none\" ml=\"0\">\r\n        <OnlineLabel label={`online—${online.length}`} />\r\n        {online.map(m => (\r\n          <MemberListItem key={m.id} member={m} />\r\n        ))}\r\n        <OnlineLabel label={`offline—${offline.length}`} />\r\n        {offline.map(m => (\r\n          <MemberListItem key={m.id} member={m} />\r\n        ))}\r\n      </UnorderedList>\r\n    </GridItem>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport getSocket from \"../getSocket\";\r\n\r\nexport default function useMemberSocket(guildId, key) {\r\n  const cache = useQueryClient();\r\n\r\n  useEffect(() => {\r\n    const socket = getSocket();\r\n    socket.emit(\"joinGuild\", guildId);\r\n    socket.on(\"add_member\", newMember => {\r\n      cache.setQueryData(key, data => {\r\n        return [...data, newMember].sort((a, b) =>\r\n          a.username.localeCompare(b.username)\r\n        );\r\n      });\r\n    });\r\n\r\n    socket.on(\"remove_member\", memberId => {\r\n      cache.setQueryData(key, data => {\r\n        return [...data?.filter(m => m.id !== memberId)];\r\n      });\r\n    });\r\n\r\n    socket.on(\"toggle_online\", memberId => {\r\n      cache.invalidateQueries(key);\r\n      // cache.setQueryData(key, (data) => {\r\n      //   const index = data?.findIndex((m) => m.id === memberId);\r\n      //   if (index !== -1) {\r\n      //     data[index].isOnline = true;\r\n      //   }\r\n      //   return data;\r\n      // });\r\n    });\r\n\r\n    socket.on(\"toggle_offline\", memberId => {\r\n      cache.setQueryData(key, data => {\r\n        const index = data?.findIndex(m => m.id === memberId);\r\n        if (index !== -1) {\r\n          data[index].isOnline = false;\r\n        }\r\n        return data;\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.emit(\"leaveRoom\", guildId);\r\n      socket.disconnect();\r\n    };\r\n  }, [key, cache, guildId]);\r\n}\r\n","import React from \"react\";\r\nimport settingsStore from \"stores/settingsStore\";\r\nimport AppLayout from \"components/layouts/AppLayout\";\r\nimport ChannelHeader from \"components/layouts/guild/ChannelHeader\";\r\nimport Channels from \"components/layouts/guild/Channels\";\r\nimport ChatScreen from \"components/layouts/guild/chat/ChatScreen\";\r\nimport MessageInput from \"components/layouts/guild/chat/MessageInput\";\r\nimport GuildList from \"components/layouts/guild/GuildList\";\r\nimport MemberList from \"components/layouts/guild/MemberList\";\r\n\r\nexport default function ViewGuild() {\r\n  const showMemberList = settingsStore((state) => state.showMembers);\r\n\r\n  return (\r\n    <AppLayout showLastColumn={showMemberList}>\r\n      <GuildList />\r\n      <Channels />\r\n      <ChannelHeader />\r\n      <ChatScreen />\r\n      <MessageInput />\r\n      {showMemberList && <MemberList />}\r\n    </AppLayout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Account from \"./pages/Account\";\r\nimport AuthRoute from \"./pages/AuthRoute\";\r\nimport ForgotPassword from \"./pages/ForgotPassword\";\r\nimport Home from \"./pages/Home\";\r\nimport Invite from \"./pages/Invite\";\r\nimport Landing from \"./pages/Landing\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport ResetPassword from \"./pages/ResetPassword\";\r\nimport ViewGuild from \"./pages/ViewGuild\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Landing} />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/register\" component={Register} />\r\n      <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n      <Route path=\"/reset-password/:token\" component={ResetPassword} />\r\n      <AuthRoute exact path=\"/channels/me\" component={Home} />\r\n      <AuthRoute exact path=\"/channels/me/:channelId\" component={Home} />\r\n      <AuthRoute\r\n        exact\r\n        path=\"/channels/:guildId/:channelId\"\r\n        component={ViewGuild}\r\n      />\r\n      <AuthRoute exact path=\"/account\" component={Account} />\r\n      <AuthRoute exact path=\"/:link\" component={Invite} />\r\n    </Switch>\r\n  );\r\n}\r\n","import AppProviders from \"AppProviders\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <AppProviders>\r\n    <App />\r\n  </AppProviders>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}